[{"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/About.jsx":"1","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/ContactUs.jsx":"2","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/MainImage.jsx":"3","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/Map.jsx":"4","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/Services.jsx":"5","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Context/AllContext.jsx":"6","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Lang/LangProvider.jsx":"7","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/404.js":"8","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_app.jsx":"9","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_document.js":"10","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/about-us.jsx":"11","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/index.jsx":"12","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/nav-bar.jsx":"13","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/SendEmail.jsx":"14","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/firebase.js":"15","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/index.js":"16","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/reportWebVitals.js":"17"},{"size":1824,"mtime":1688158996549,"results":"18","hashOfConfig":"19"},{"size":16797,"mtime":1688672073396,"results":"20","hashOfConfig":"19"},{"size":3382,"mtime":1688484591797,"results":"21","hashOfConfig":"19"},{"size":362,"mtime":1688747285919,"results":"22","hashOfConfig":"19"},{"size":10142,"mtime":1688480798231,"results":"23","hashOfConfig":"19"},{"size":1524,"mtime":1688504671892,"results":"24","hashOfConfig":"19"},{"size":1624,"mtime":1688504625829,"results":"25","hashOfConfig":"19"},{"size":2697,"mtime":1688747372302,"results":"26","hashOfConfig":"19"},{"size":1050,"mtime":1689106124764,"results":"27","hashOfConfig":"19"},{"size":2295,"mtime":1688749179116,"results":"28","hashOfConfig":"19"},{"size":3468,"mtime":1688669219452,"results":"29","hashOfConfig":"19"},{"size":3902,"mtime":1689108694724,"results":"30","hashOfConfig":"19"},{"size":16078,"mtime":1689108691371,"results":"31","hashOfConfig":"19"},{"size":702,"mtime":1688158999296,"results":"32","hashOfConfig":"19"},{"size":618,"mtime":1686327366129,"results":"33","hashOfConfig":"19"},{"size":336,"mtime":1688749758841,"results":"34","hashOfConfig":"19"},{"size":362,"mtime":1685381948198,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"11y3r1b",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/About.jsx",["97"],[],"import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { FormattedMessage } from \"react-intl\";\n\nexport default function About() {\n    let anchoViewport = window.outerWidth;\n\n  return (\n    <Box sx={{margin:{xs:\"none\", md:'140px 220px'}, display:{md:'flex'}, alignItems:'center'}}>\n      <Box sx={{display:'flex', justifyContent:'center', flexDirection:{md:'column'}, alignItems:'center', margin:{md:'50px 100px'}, marginBottom:{xs:'10px'}}}>\n        <img src=\"/assets/icono-06.svg\" style={{width:anchoViewport * 0.0520833333}}/>\n        <Box sx={{display:'flex', marginLeft:{xs:'10px'}}}>\n           <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#0060a6\",\n            fontWeight: 600,\n            fontSize: `clamp(25px,${anchoViewport * 0.026455026}px,40px)`,\n            marginRight:'10px'\n          }}\n        >\n          <FormattedMessage id=\"about.item1\" defaultMessage={\"About us\"} />\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#FC7128\",\n            fontWeight: 600,\n            fontSize: `clamp(25px,${anchoViewport * 0.026455026}px,40px)`,\n          }}\n        >\n          <FormattedMessage id=\"about.item2\" defaultMessage={\"About us\"} />\n        </Typography> \n        </Box>\n      </Box>\n      <Box sx={{marginBottom:{xs:'10px'}}}>\n        <Typography sx={{marginX:{xs:\"20px\",md:'60px'},textAlign:'justify', color: \"#0060a6\", fontFamily:\"Source Sans Pro, sans serif\", fontSize:`clamp(10px,${anchoViewport*0.0119047619}px,20px)`, fontWeight:300}}>\n          <FormattedMessage id=\"about.item3\" defaultMessage={\"text\"}  values={{ br: <br />, b: (chunks) => <strong>{chunks}</strong>}}/>\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/ContactUs.jsx",["98","99"],[],"import { React, useState, useRef } from \"react\";\nimport {\n  Box,\n  Grid,\n  Typography,\n  Stack,\n  TextField,\n  Button,\n  Divider,\n} from \"@mui/material\";\nimport { FormattedMessage } from \"react-intl\";\nimport SendEmail from \"../SendEmail\";\nimport Send from \"@mui/icons-material/Send\";\nimport MarkEmailReadIcon from \"@mui/icons-material/MarkEmailRead\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nexport default function ContactUs({nav }) {\n  const [contactForm, setContactForm] = useState({});\n  const [isValidEmail, setIsValidEmail] = useState(true);\n  const [sendedMessage, setSendedMessage] = useState(false);\n  const refBox = useRef();\n  let anchoViewport = window.outerWidth;\nlet location = useLocation();\nlet navigate=useNavigate()\n  const SendedMessage = () => {\n    return (\n      <Box\n        height={refBox?.current?.clientHeight - 17}\n        gap={1}\n        display={\"flex\"}\n        flexDirection={\"column\"}\n        alignItems={\"center\"}\n        justifyContent={\"center\"}\n      >\n        <Box height={\"80px\"} width={\"80px\"}>\n          <MarkEmailReadIcon sx={{ fontSize: \"80px\", color: \"#fff\" }} />\n        </Box>\n        <Typography\n          variant=\"h2\"\n          fontFamily=\"Open Sans, sans serif\"\n          fontSize={\"30px\"}\n          fontWeight={500}\n          color={\"#fff\"}\n          lineHeight={1.3}\n          letterSpacing={2}\n          marginBottom={\"20px\"}\n        >\n          <FormattedMessage\n            id=\"contact.item8\"\n            defaultMessage={\"contact success\"}\n            values={{ br: <br /> }}\n          />\n        </Typography>\n\n        <Typography\n          variant=\"span\"\n          fontSize={\"15px\"}\n          fontFamily=\"Open Sans, sans serif\"\n          fontWeight={400}\n          color={\"#fff\"}\n          lineHeight={1.3}\n          letterSpacing={1}\n          textAlign={\"center\"}\n        >\n          <FormattedMessage\n            id=\"contact.item9\"\n            defaultMessage={\"contact successMessage\"}\n            values={{ br: <br /> }}\n          />\n        </Typography>\n      </Box>\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isValidEmail) {\n      //enviar a api rest\n      try {\n        const res = await axios.post(\n          \"https://us-central1-everseek-core.cloudfunctions.net/Send_email_to_everseek\",JSON.stringify(contactForm));\n        if (res.status === 200) {\n          SendEmail(contactForm.nombre, contactForm.last_name,contactForm.email, contactForm.mensaje)\n          setSendedMessage(true);\n        } else {\n          alert(\"error\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        alert(\"Error al realizar la solicitud\");\n      }\n    } else {\n      alert(\"Correo Electrónico no válido\");\n    }\n  };\n\n  const handleInputChange = (e) => {  \n    if (e.target.name === \"email\") {\n      const email = e.target.value;\n      if (email.includes(\"@\") && email.includes(\".\")) {\n        setIsValidEmail(true);\n      } else {\n        setIsValidEmail(false);\n      }\n    }\n    setContactForm({\n      ...contactForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"#06293F\",\n        paddingTop: \"20px\",\n      }}\n    >\n      <Box sx={{ padding: { xs: \"20px 60px\", md: \"90px 210px\" } }}>\n        <Grid container spacing={2}>\n          <Grid\n            ref={refBox}\n            item\n            xs={5}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Box>\n              <Typography\n                sx={{\n                  color: \"#fff\",\n                  fontWeight: 600,\n                  fontSize: `clamp(30px,${anchoViewport * 0.026455026}px,40px)`,\n                  fontFamily: \"Source Sans Pro, sans serif\",\n                  lineHeight: \"1.2\",\n                }}\n              >\n                <FormattedMessage id=\"contact.item1\" />\n              </Typography>\n            </Box>\n            <Box>\n              <Typography\n                sx={{\n                  color: \"#fff\",\n                  fontSize: \"16px\",\n                  fontFamily: \"Open Sans, sans serif\",\n                }}\n              >\n                info@everseek.io\n              </Typography>\n              <Box sx={{ display: \"flex\", my: \"30px\" }}>\n                {/* <LinkedInIcon\n                fontSize=\"large\"\n                sx={{ color: \"rgb(252,113,40)\" }}\n              /> */}\n                <a\n                  href=\"https://www.linkedin.com/company/everseek\"\n                  target={\"_blank\"}\n                >\n                  <img\n                    src=\"/icons/linkedin.png\"\n                    alt=\"linkedin\"\n                    style={{ width: \"30px\" }}\n                  />\n                </a>\n                {/* <img src=\"/icons/twitter.png\" alt=\"linkedin\" style={{width:'30px'}}/> */}\n              </Box>\n              <Typography\n                sx={{\n                  color: \"#fff\",\n                  fontSize: \"16px\",\n                  fontFamily: \"Open Sans, sans serif\",\n                  width: \"70%\",\n                  marginBottom: \"20px\",\n                }}\n              >\n                <FormattedMessage id=\"contact.item2\" />\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={7}>\n            {sendedMessage ? (\n              <SendedMessage />\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <Stack gap={1}>\n                  <Box sx={{ display: \"flex\", marginBottom: \"10px\" }}>\n                    <TextField\n                      fullWidth\n                      name=\"nombre\"\n                      type=\"text\"\n                      variant=\"filled\"\n                      onChange={handleInputChange}\n                      label={\n                        <FormattedMessage\n                          id=\"contact.item3\"\n                          defaultMessage={\"name\"}\n                        />\n                      }\n                      InputProps={{\n                        disableUnderline: true, // Deshabilita la línea debajo del TextField\n                        sx: {\n                          backgroundColor: \"#fff !important\",\n                          borderRadius: \"10px\",\n                          \":focus-visible\": {\n                            outline: \"none\",\n                          },\n                          \":hover\": { backgroundColor: \"#fff !important\" },\n                          \"&:not(.Mui-focused)\": {\n                            backgroundColor: \"#fff !important\",\n                          },\n                        },\n                      }}\n                      sx={{\n                        \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                          { backgroundColor: \"#fff\" },\n                        \".MuiInputBase-input.MuiFilledInput-input\": {\n                          fontFamily: \"Open Sans, sans serif !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                        \".MuiInputLabel-root\": {\n                          color: \"#9a9a9b\",\n                          fontFamily: \"Open Sans, sans serif !important\",\n                        },\n                        marginRight: \"5px\",\n                        color: \"#fff !important\",\n                        \".MuiOutlinedInput-notchedOutline\": {\n                          borderColor: \"#fff !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                      }}\n                      required\n                    />\n                    <TextField\n                      fullWidth\n                      name=\"last_name\"\n                      type=\"text\"\n                      variant=\"filled\"\n                      onChange={handleInputChange}\n                      label={\n                        <FormattedMessage\n                          id=\"contact.item4\"\n                          defaultMessage={\"last name\"}\n                        />\n                      }\n                      InputProps={{\n                        disableUnderline: true, // Deshabilita la línea debajo del TextField\n                        sx: {\n                          backgroundColor: \"#fff !important\",\n                          borderRadius: \"10px\",\n                          \":focus-visible\": {\n                            outline: \"none\",\n                          },\n                          \":hover\": { backgroundColor: \"#fff !important\" },\n                          \"&:not(.Mui-focused)\": {\n                            backgroundColor: \"#fff !important\",\n                          },\n                        },\n                      }}\n                      sx={{\n                        \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                          { backgroundColor: \"#fff\" },\n                        \".MuiInputBase-input-MuiFilledInput-input\": {\n                          fontFamily: \"Open Sans, sans serif !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                        \".MuiInputLabel-root\": {\n                          color: \"#9a9a9b\",\n                          fontFamily: \"Open Sans, sans serif !important\",\n                        },\n                        marginRight: \"5px\",\n                        color: \"#fff !important\",\n                        \".MuiOutlinedInput-notchedOutline\": {\n                          borderColor: \"#fff !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                      }}\n                      required\n                    />\n                  </Box>\n\n                  <TextField\n                    name=\"email\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    onError={() => (isValidEmail ? false : true)}\n                    helperText={isValidEmail ? \"\" : \"Correo no valido\"}\n                    onChange={handleInputChange}\n                    label={\n                      <FormattedMessage\n                        id=\"contact.item7\"\n                        defaultMessage={\"email\"}\n                      />\n                    }\n                    InputProps={{\n                      disableUnderline: true, // Deshabilita la línea debajo del TextField\n                      sx: {\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                        \":focus-visible\": {\n                          outline: \"none\",\n                        },\n                        \":hover\": { backgroundColor: \"#fff !important\" },\n                        \"&:not(.Mui-focused)\": {\n                          backgroundColor: \"#fff !important\",\n                        },\n                      },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                        { backgroundColor: \"#fff\" },\n                      \".MuiInputBase-input-MuiFilledInput-input\": {\n                        fontFamily: \"Open Sans, sans serif !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiInputLabel-root\": {\n                        color: \"#9a9a9b\",\n                        fontFamily: \"Open Sans, sans serif !important\",\n                      },\n                      marginRight: \"5px\",\n                      color: \"#fff !important\",\n                      \".MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"#fff !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiFormHelperText-root\": { color: \"#fff !important\" },\n                    }}\n                    required\n                  />\n                  <TextField\n                    name=\"mensaje\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    minRows={5}\n                    maxRows={7}\n                    onChange={handleInputChange}\n                    label={\n                      <FormattedMessage\n                        id=\"contact.item5\"\n                        defaultMessage={\"message\"}\n                      />\n                    }\n                    multiline\n                    InputProps={{\n                      disableUnderline: true, // Deshabilita la línea debajo del TextField\n                      sx: {\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                        \":focus-visible\": {\n                          outline: \"none\",\n                        },\n                        \":hover\": { backgroundColor: \"#fff !important\" },\n                        \"&:not(.Mui-focused)\": {\n                          backgroundColor: \"#fff !important\",\n                        },\n                      },\n                    }}\n                    InputLabelProps={{\n                      sx: {\n                        color: \"#06293F\",\n                      },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      \"label[data-shrink=false]+.MuiInputBase-formControl .css-10botns-MuiInputBase-input-MuiFilledInput-input\":\n                        { backgroundColor: \"#fff\" },\n                      \".MuiInputBase-input.MuiFilledInput-input\": {\n                        fontFamily: \"Open Sans, sans serif !important\",\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiInputLabel-root\": {\n                        color: \"#9a9a9b\",\n                        fontFamily: \"Open Sans, sans serif !important\",\n                      },\n                      marginRight: \"5px\",\n                      color: \"#fff !important\",\n                      \".MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"#fff !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                    }}\n                    required\n                  />\n                </Stack>\n                <Box\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"start\",\n                  }}\n                >\n                  <Button\n                    sx={{\n                      backgroundColor: \"#fff\",\n                      width: \"160px\",\n                      color: \"#06293F\",\n                      fontWeight: 600,\n                      fontFamily: \"Source Sans Pro, sans-serif\",\n                      textTransform: \"initial\",\n                      borderRadius: \"20px\",\n                      padding: \"2px 20px\",\n                      marginTop: \"12px\",\n                      fontSize: \"14px\",\n                      letterSpacing: 1,\n                      \":hover\": {\n                        backgroundColor: \"#fff\",\n                        color: \"#06293F\",\n                      },\n                    }}\n                    type={\"Submit\"}\n                  >\n                    <FormattedMessage\n                      id=\"contact.item6\"\n                      defaultMessage={\"submit\"}\n                    />{\" \"}\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Grid>\n        </Grid>\n        <Divider sx={{ backgroundColor: \"#fff\", my: \"70px\" }} />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: {xs:'center',md:\"space-between\"},\n            alignItems: \"center\",\n            marginTop: \"-20px\",\n          }}\n        >\n          <img\n            onClick={() => location.pathname === \"/about-us\"?navigate(-1):nav()}\n            src=\"/assets/Everseek-blanco.png\"\n            alt=\"logo\"\n            style={{ width: \"230px\", cursor: \"pointer\" }}\n          />\n          <Typography sx={{ display:{xs:'none', md:'flex'},color: \"#fff\", fontFamily: \"Open Sans\" }}>\n            EVERSEEK.IO | Privacy Policy\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/MainImage.jsx",["100","101","102","103"],[],"import {React, useRef, useEffect, useState} from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { FormattedMessage } from \"react-intl\";\n\n/**\n * Componente que contiene la imagen principal\n * @returns\n */\nexport default function MainImage({service, anchoViewport, src}) {\n  const [videoLoaded, setVideoLoaded] = useState(false);\n  const [videoHeight, setVideoHeight] = useState(200);\n  const imageRef = useRef();\n\n  // useEffect(() => {\n  //   const handleVideoLoad = () => {\n  //     if (videoRef.current) {\n  //       const height = videoRef.current.offsetHeight;\n  //       setVideoHeight(height);      }\n  //   };\n\n  //   if (videoRef.current && videoRef.current.readyState >= 2) {\n  //     handleVideoLoad();\n  //   } else {\n  //     videoRef.current.addEventListener(\"loadedmetadata\", handleVideoLoad);\n  //     videoRef.current.addEventListener(\"loadeddata\", handleVideoLoad);\n  //   }\n\n  //   return () => {\n  //     if (videoRef.current) {\n  //       videoRef.current.removeEventListener(\"loadedmetadata\", handleVideoLoad);\n  //       videoRef.current.removeEventListener(\"loadeddata\", handleVideoLoad);\n  //     }\n  //   };\n  // }, []);\n\n  useEffect(() => {\n    const handleImageLoad = () => {\n      const height = imageRef?.current?.offsetHeight;\n      setVideoHeight(height);\n    };\n  \n    if (imageRef.current) {\n      imageRef.current.addEventListener(\"load\", handleImageLoad);\n    }\n  \n    return () => {\n      if (imageRef.current) {\n        imageRef.current.removeEventListener(\"load\", handleImageLoad);\n      }\n    };\n  }, [])\n\n  return (\n    <Box sx={{ width: \"100%\", height: {xs:videoHeight + 70,md:videoHeight} }}>\n      {/* <video autoPlay loop muted ref={videoRef} style={{ width: \"100%\", position: \"absolute\", zIndex: \"-1\", top:55 }}>\n        <source src=\"/assets/Imagen-principal.mp4\" type=\"video/mp4\" />\n      </video> */}\n      <img\n        ref={imageRef}\n        src={src}\n        alt=\"img-principal\"\n        style={{ width: \"100%\", position: \"absolute\", zIndex: \"-1\", top:55 }}\n      />\n      <Box sx={{ paddingLeft: anchoViewport*0.0066137566, paddingTop: {xs:(anchoViewport*0.013227513)+5, md:anchoViewport*0.013227513} }}>\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans-serif\",\n            fontWeight: 600,\n            fontSize: `${anchoViewport*0.03306878306878307}px`,\n            color: \"#fff\",\n            lineHeight: \"1.2\",\n          }}\n        >\n          <FormattedMessage id=\"main.item0\" defaultMessage=\"title\"  values={{ br: <br />} } />\n        </Typography>\n        {/* <Box sx={{width:'130px', border: \"1px solid #FC7128\",display:'flex', justifyContent:'center', borderRadius: \"25px\",marginTop:'10px'}}>\n          {\" \"}\n          <Button\n          onClick={service}\n            sx={{\n                \":hover\":{background: \"rgb(255, 255, 255, 0.7)\",            },\n              color: \"#FC7128\",\n              textTransform: \"initial\",\n              fontFamily: \"Source Sans Pro, sans-serif\",\n              padding: \"0px 10px\",\n              opacity: \"1\",\n              fontWeight: 600,\n              background: \"rgb(255, 255, 255, 0.7)\",\n              width:'100%', \n              borderRadius: \"25px\"\n            }}\n          >\n            <FormattedMessage id=\"main.item1\" defaultMessage=\"Learn more\" />\n          </Button>\n        </Box> */}\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/Map.jsx",["104"],[],"import { Box } from \"@mui/system\"\n// import \"../index.css\"\n\nexport default function Map() {\n\n    return (\n        <Box sx={{width:'100%', display:'flex', justifyContent:'center', marginBottom:'80px'}} >\n            {/* <div className=\"map\"> */}\n             <img  src=\"/assets/Mapa.svg\" style={{width:'75%'}}/>\n \n            {/* </div> */}\n        </Box>\n    )\n}","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Components/Services.jsx",["105","106","107"],[],"import React from \"react\";\nimport {\n  Box,\n  Typography,\n  Step,\n  Stepper,\n  StepButton,\n  StepContent,\n} from \"@mui/material\";\nimport { FormattedMessage } from \"react-intl\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\n\nconst steps = [\n  \"Select campaign settings\",\n  \"Create an ad group\",\n  \"Create an ad\",\n];\nconst services = [\n  {\n    title: \"services.item2\",\n    description: \"services.item6\",\n    img: \"/assets/Imagen-principal.png\",\n  },\n  {\n    title: \"services.item10\",\n    description: \"services.item11\",\n    img: \"/assets/Imagen-principal.png\",\n  },\n  {\n    title: \"services.item3\",\n    description: \"services.item7\",\n  },\n  {\n    title: \"services.item5\",\n    description: \"services.item9\",\n  },\n  {\n    title: \"services.item4\",\n    description: \"services.item8\",\n  },\n];\nexport default function Services({ anchoViewport }) {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed,\n          // find the first step that has been completed\n          steps.findIndex((step, i) => !(i in completed))\n        : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  return (\n    <Box sx={{ margin: { md: \"50px 230px\" } }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          paddingTop: \"20px\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <Typography\n          sx={{\n            width: \"70%\",\n            fontFamily: \"Open Sans\",\n            fontSize: `clamp(14px,${anchoViewport * 0.0165343915}px,25px)`,\n            textAlign: \"center\",\n            color: \"#05293f\",\n            fontWeight: 300,\n          }}\n        >\n          <FormattedMessage id={\"main.item2\"} defaultMessage=\"text\" />\n        </Typography>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"30px\",\n          justifyContent: { xs: \"center\", md: \"flex-start\" },\n        }}\n      >\n        {/* <img\n          src=\"/assets/Forma E.png\"\n          alt=\"viñeta\"\n          style={{ width: \"50px\", marginRight: \"20px\" }}\n        /> */}\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#0060a6\",\n            fontWeight: 600,\n            fontSize: `clamp(30px,${anchoViewport * 0.026455026}px,40px)`,\n            marginRight: \"13px\",\n            marginLeft: { xs: \"6px\", md: \"-6px\" },\n          }}\n        >\n          <FormattedMessage id=\"services.item0\" defaultMessage=\"elev\" />\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#FC7128\",\n            fontWeight: 600,\n            fontSize: `clamp(30px,${anchoViewport * 0.026455026}px,40px)`,\n          }}\n        >\n          <FormattedMessage id=\"services.item1\" defaultMessage=\"services\" />\n        </Typography>\n      </Box>\n      <Box\n        sx={{ marginBottom: \"25px\", display: \"flex\", justifyContent: \"center\" }}\n      >\n        <Typography\n          sx={{\n            fontFamily: \"Open Sans, sans serif\",\n            color: \"#05293f\",\n            fontSize: \"18px\",\n            fontWeight: 300,\n            marginX:{xs:\"10px\"},\n            textAlign:{xs:\"center\", md:'inherit'},\n            width: {md: \"96.5%\" },\n          }}\n        >\n          <FormattedMessage\n            id=\"services.subtitulo\"\n            defaultMessage=\"services\"\n            values={{ br: <br /> }}\n          />\n        </Typography>\n      </Box>\n      {/* <Box>\n        <Typography sx={{fontFamily: \"Source Sans Pro, sans serif\",color: \"#FC7128\",}}>\n            <FormattedMessage id='services.item10' defaultMessage='description' />\n        </Typography>\n      </Box> */}\n      <Box sx={{ width: \"100%\", marginLeft: \"12px\", backgroundColor: \"\" }}>\n        <Stepper\n          nonLinear\n          activeStep={activeStep}\n          orientation=\"vertical\"\n          sx={{\n            \".MuiStepConnector-line\": {\n              borderColor: \"#0060a6 !important\",\n              height: \"75px !important\",\n              position: \"absolute !important\",\n              marginTop: \"-20px !important\",\n            },\n            \".MuiStepContent-root\": {\n              borderLeft: \" 1px solid #0060a6 !important\",\n              marginTop: activeStep === 0 ? \"-20px !important\" : null,\n            },\n            \".MuiStepLabel-iconContainer\": { width: \"25px\" },\n          }}\n        >\n          {services.map((label, index) => (\n            <Step key={index} completed={completed[index]}>\n              <StepButton\n                color=\"inherit\"\n                onClick={handleStep(index)}\n                TouchRippleProps={{\n                  classes: {\n                    rippleVisible: \"MuiTouchRipple-root-visible\",\n                    child: \"MuiTouchRipple-child\",\n                  },\n                }}\n                icon={\n                  <CircleIcon\n                    sx={{\n                      color: \"#F3632E\",\n                      position: \"relative\",\n                      top: \"2px\",\n                      width: \"100%\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  />\n                }\n                sx={{\n                  \"&:focus\": {\n                    outline: \"none !important\",\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \"&.Mui-active\": {\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \".MuiTouchRipple-root-visible\": {\n                    backgroundColor: \"transparent !important\",\n                    opacity: \"0 !important\",\n                  },\n                  \".MuiTouchRipple-child\": {\n                    backgroundColor: \"transparent !important\",\n                    display: \"none !important\",\n                  },\n                  \".MuiSvgIcon-root.MuiStepIcon-root.Mui-active\": {\n                    color: \"transparent !important\",\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \".MuiSvgIcon-root.MuiStepIcon-root\": {\n                    color: \"transparent !important\",\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \".MuiSvgIcon-root\": { height: \"0.8rem\" },\n                }}\n              >\n                <Typography\n                  sx={{\n                    fontFamily: \"Source Sans Pro, sans serif\",\n                    color: \"#0060a6\",\n                    fontWeight: 600,\n                    fontSize: \"25px\",\n                    marginLeft: \"20px\",\n                  }}\n                >\n                  <FormattedMessage\n                    key={label}\n                    id={label.title}\n                    defaultMessage={\"color\"}\n                  />\n                </Typography>\n              </StepButton>\n              {activeStep === index ? (\n                <>\n                  <StepContent>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection:{xs:'column', md:'row'},\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Box>\n                        <Typography\n                          sx={{\n                            mt: 2,\n                            mb: 1,\n                            py: 1,\n                            width: {md:\"550px\"},\n                            fontFamily: \"Open Sans, sans serif\",\n                            color: \"#05293f\",\n                            fontSize: \"18px\",\n                            marginLeft: \"20px\",\n                            fontWeight: 300,\n                          }}\n                        >\n                          <FormattedMessage\n                            key={label}\n                            id={label.description}\n                            defaultMessage={\"color\"}\n                            values={{\n                              a: (link) => (\n                                <a\n                                  href=\"https://www.firehawkdetection.com/\"\n                                  target={\"_blank\"}\n                                  rel=\"noreferrer\"\n                                  style={{fontWeight:600, color:\"#0060a6\"}}\n                                >\n                                  {link}\n                                </a>\n                              ),\n                            }}\n                          />\n                        </Typography>\n                      </Box>\n\n                      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <video\n                          autoPlay\n                          // loop\n                          muted\n                          src={`/assets/0${index + 1}.mp4`}\n                          alt=\"\"\n                          style={{ width: \"95%\", maxHeight: \"130px\" }}\n                        />\n                        <source\n                          src={`/assets/0${index + 1}.mp4`}\n                          type=\"video/mp4\"\n                        />\n                      </Box>\n                    </Box>\n                  </StepContent>\n                </>\n              ) : null}\n            </Step>\n          ))}\n        </Stepper>\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Context/AllContext.jsx",["108","109"],[],"import { createContext, useState, useEffect, useContext } from \"react\";\n\nconst AllContext = createContext();\nexport function useAllContext() {\n  return useContext(AllContext);\n}\n\nconst PageContext = ({ children }) => {\n  const [refContact, setRefContact] = useState();\n  const [refServices, setRefServices] = useState();\n  const [changePage, setChangePage] = useState(false);\n  const [changePageToAbout, setChangePageToAbout] = useState(false);\n  const [activeSection, setActiveSection] = useState(\"\");\n  const [refNav, setRefNav] = useState();\n  const [refAbout, setRefAbout] = useState();\n\n  const handleScroll = (sections) => {\n    const scrollPosition = window.pageYOffset;\n    let currentSection = \"\";\n    sections.forEach((section) => {\n      const sectionId = section.getAttribute(\"id\");\n      const sectionTop = section.offsetTop;\n      const sectionHeight = section.offsetHeight;\n\n      if (\n        window.pageYOffset >= sectionTop - sectionHeight / 2 &&\n        window.pageYOffset < sectionTop + sectionHeight\n      ) {\n        currentSection = sectionId;\n      }\n    });\n\n    setActiveSection(currentSection);\n  };\n  const value = {\n    refContact,\n    setRefContact,\n    refServices,\n    setRefServices,\n    changePage,\n    setChangePage,\n    activeSection,\n    setActiveSection,\n    handleScroll,\n    refNav,\n    setRefNav,refAbout, setRefAbout, changePageToAbout, setChangePageToAbout\n  };\n\n  return <AllContext.Provider value={value}>{children}</AllContext.Provider>;\n};\n\nexport { PageContext, AllContext };\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Lang/LangProvider.jsx",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/404.js",["110"],[],"import { Box, Grid, Typography } from '@mui/material';\n\nimport { Fragment } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Head from 'next/head';\n\nfunction Custom404() {\n    return (\n        <Fragment>\n            <Head>\n                <title>404 | FireHawk Detección</title>\n                <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n                <meta name=\"description\" content=\"En FireHawk, ofrecemos un servicio de detección temprana y notificación de incendios forestales que complementa el trabajo humano con Inteligencia Artificial.\" />\n            </Head>\n\n            <Grid container display={'flex'} alignItems='center' gap={0} rowSpacing={0}>\n                <Grid item xs={12} margin={0}>\n                    <Box display={'flex'} flexDirection={'column'} alignItems={'center'} padding={'100px 0 0 0'} backgroundColor='#f0f0f0' >\n                        <Box>\n                            <Typography\n                                variant=\"h2\"\n                                fontSize={'30px'}\n                                fontWeight={500}\n                                color={'primary'}\n                                letterSpacing={2}\n                                textAlign={'center'}\n                            >\n                                ERROR\n                            </Typography>\n                            <Typography\n                                variant=\"h2\"\n                                fontSize={'200px'}\n                                fontWeight={500}\n                                color={'primary'}\n                                letterSpacing={2}\n                                textAlign={'center'}\n                                lineHeight={1}\n                            >\n                                404\n                            </Typography>\n                        </Box>\n                        <Typography\n                            variant=\"h2\"\n                            fontSize={'40px'}\n                            fontWeight={500}\n                            color={'secondary'}\n                            letterSpacing={2}\n                            textAlign={'center'}\n                        >\n                            <FormattedMessage id='404.title' defaultMessage={'404.title'} values={{ br: <br /> }} />\n                        </Typography>\n                    </Box>\n                </Grid>\n\n                <Grid item xs={12} marginBottom={-5}>\n                    <img src={'/assets/404.jpeg'} width={'100%'} height={'100%'} alt='404 image' />\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default Custom404","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_app.jsx",["111","112","113","114","115"],[],"import {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  useLocation,\n} from \"react-router-dom\";\nimport AboutUs from \"./about-us\";\nimport { LangProvider } from \"../Lang/LangProvider\";\nimport Home from \"./index\";\nimport { React, useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport { PageContext } from \"../Context/AllContext\";\nimport \"../styles/index.css\";\n\nfunction App() {\n  // const Wrapper = ({ children }) => {\n  //   const location = useLocation();\n  //   useLayoutEffect(() => {\n  //     if (typeof window !== \"undefined\") {\n  //       document.documentElement.scrollTo(0, 0);\n  //     }\n  //   }, [location.pathname]);\n  //   return children;\n  // };\n\n  return (\n    <PageContext>\n      <LangProvider>\n        <Router>\n          {/* <Wrapper> */}\n            <Routes>\n              <Route index path=\"/\" element={<Home />} />\n              <Route path=\"/about-us\" element={<AboutUs />} />\n            </Routes>\n          {/* </Wrapper> */}\n        </Router>\n      </LangProvider>\n    </PageContext>\n  );\n}\n\nexport default App;\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_document.js",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/about-us.jsx",["116","117","118","119","120","121","122","123","124","125","126","127"],[],"import { React, useEffect, useState, useRef } from \"react\";\nimport { Box } from \"@mui/material\";\nimport About from \"../Components/About\";\nimport MainImage from \"../Components/MainImage\";\nimport { useContext } from \"react\";\nimport { AllContext } from \"../Context/AllContext\";\nimport Map from \"../Components/Map\";\nimport ContactUs from \"../Components/ContactUs\";\nimport NavBar from \"./nav-bar\";\n\nexport default function AboutUs() {\n    const contactRef = useRef(null);\n    const aboutRef = useRef(null);\n    const mainRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [navBarHeight, setNavBarHeight] = useState(0);\n  const {\n    setRefContact, refNav, refAbout, setRefAbout, changePageToAbout, setChangePageToAbout, refServices, setActiveSection\n    } = useContext(AllContext);\n\n  //Efecto para marcar la sección en la que se encuentra el scroll\n  useEffect(() => {\n    const sections = document.querySelectorAll(\"section\");\n\n    const handleScroll = () => {\n      const scrollPosition = window.pageYOffset;\n      let currentSection = \"\";\n      sections.forEach((section) => {\n        const sectionId = section.getAttribute(\"id\");\n        const sectionTop = section.offsetTop;\n        const sectionHeight = section.offsetHeight;\n\n        if (\n          window.pageYOffset >= sectionTop - sectionHeight / 2 &&\n          window.pageYOffset < sectionTop + sectionHeight\n        ) {\n          currentSection = sectionId;\n        }\n      });\n\n      setActiveSection(currentSection);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    setRefContact(contactRef);\n    setRefAbout(aboutRef);\n  });\n  const scrollToNav = () => {\n    refNav.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  const scrollToAbout = () => {\n    aboutRef?.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(true);\n    }, 500);\n  }, [mainRef.current]);\n\n  useEffect(() => {\n    const sections = document.querySelectorAll(\"section\");\n\n    const handleScroll = () => {\n      const scrollPosition = window.pageYOffset;\n      let currentSection = \"\";\n      sections.forEach((section) => {\n        const sectionId = section.getAttribute(\"id\");\n        const sectionTop = section.offsetTop;\n        const sectionHeight = section.offsetHeight;\n\n        if (\n          window.pageYOffset >= sectionTop - sectionHeight / 2 &&\n          window.pageYOffset < sectionTop + sectionHeight\n        ) {\n          currentSection = sectionId;\n        }\n      });\n      setActiveSection(currentSection);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [loading]);\n\n  // useEffect(() => {\n  //   if (changePageToAbout) {\n  //     setTimeout(() => {\n  //       scrollToAbout()\n  //       setChangePageToAbout(false)\n  //     }, 800);\n  //   }\n  // }, [changePageToAbout, setChangePageToAbout]);\n\n  return (\n    <Box sx={{}}>\n        <NavBar \n          nav={scrollToNav}\n          setNavBarHeight={setNavBarHeight}/>\n      {/* {loading? <> */}\n        <section ref={aboutRef} id=\"about\">\n        <About />\n              <Map />\n      </section>\n      <section id=\"contact\" ref={contactRef} >\n        <ContactUs nav={scrollToNav}/>\n      </section>\n      {/* </> :null} */}\n      \n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/index.jsx",["128","129","130","131","132","133","134"],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/nav-bar.jsx",["135","136","137","138","139","140","141"],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/SendEmail.jsx",["142","143"],[],"import React from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, doc } from \"firebase/firestore\";\n\nexport default async function SendEmail(nombre, apellido, email, texto) {\n  const collectionRef = collection(db, \"everseek-web\",\"data\",\"emails\");\n  const emailContent = {\n\t  pass:\"wof3000\",\n    message: {\n      header: \"Comentarios de pagina web Everseek.io\",\n      human_being: `${\"Comentario de: \" +nombre + \" \" + apellido}`,\n      mail: `${email}`,\n      text: `${texto}`,\n    },\n  };\n  try {\n    const docRef = await addDoc(collectionRef, emailContent);\n    return docRef;\n  } catch (error) {\n    console.error(\"Error adding email document: \", error);\n    throw error;\n  }\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/firebase.js",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/index.js",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/reportWebVitals.js",[],[],{"ruleId":"144","severity":1,"message":"145","line":11,"column":9,"nodeType":"146","endLine":11,"endColumn":87},{"ruleId":"147","severity":1,"message":"148","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":12},{"ruleId":"151","severity":1,"message":"152","line":162,"column":17,"nodeType":"146","messageId":"153","endLine":165,"endColumn":18,"fix":"154"},{"ruleId":"147","severity":1,"message":"155","line":2,"column":27,"nodeType":"149","messageId":"150","endLine":2,"endColumn":33},{"ruleId":"147","severity":1,"message":"156","line":10,"column":10,"nodeType":"149","messageId":"150","endLine":10,"endColumn":21},{"ruleId":"147","severity":1,"message":"157","line":10,"column":23,"nodeType":"149","messageId":"150","endLine":10,"endColumn":37},{"ruleId":"158","severity":1,"message":"159","line":48,"column":18,"nodeType":"149","endLine":48,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":9,"column":14,"nodeType":"146","endLine":9,"endColumn":66},{"ruleId":"147","severity":1,"message":"160","line":44,"column":21,"nodeType":"149","messageId":"150","endLine":44,"endColumn":33},{"ruleId":"147","severity":1,"message":"161","line":62,"column":9,"nodeType":"149","messageId":"150","endLine":62,"endColumn":19},{"ruleId":"147","severity":1,"message":"162","line":72,"column":9,"nodeType":"149","messageId":"150","endLine":72,"endColumn":19},{"ruleId":"147","severity":1,"message":"163","line":1,"column":35,"nodeType":"149","messageId":"150","endLine":1,"endColumn":44},{"ruleId":"147","severity":1,"message":"164","line":18,"column":11,"nodeType":"149","messageId":"150","endLine":18,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":56,"column":21,"nodeType":"146","endLine":56,"endColumn":100},{"ruleId":"147","severity":1,"message":"167","line":5,"column":3,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"168","line":10,"column":17,"nodeType":"149","messageId":"150","endLine":10,"endColumn":25},{"ruleId":"147","severity":1,"message":"163","line":10,"column":27,"nodeType":"149","messageId":"150","endLine":10,"endColumn":36},{"ruleId":"147","severity":1,"message":"169","line":10,"column":38,"nodeType":"149","messageId":"150","endLine":10,"endColumn":44},{"ruleId":"147","severity":1,"message":"170","line":10,"column":46,"nodeType":"149","messageId":"150","endLine":10,"endColumn":61},{"ruleId":"147","severity":1,"message":"171","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":17},{"ruleId":"147","severity":1,"message":"172","line":16,"column":10,"nodeType":"149","messageId":"150","endLine":16,"endColumn":22},{"ruleId":"147","severity":1,"message":"173","line":18,"column":28,"nodeType":"149","messageId":"150","endLine":18,"endColumn":36},{"ruleId":"147","severity":1,"message":"174","line":18,"column":51,"nodeType":"149","messageId":"150","endLine":18,"endColumn":68},{"ruleId":"147","severity":1,"message":"175","line":18,"column":70,"nodeType":"149","messageId":"150","endLine":18,"endColumn":90},{"ruleId":"147","severity":1,"message":"176","line":18,"column":92,"nodeType":"149","messageId":"150","endLine":18,"endColumn":103},{"ruleId":"147","severity":1,"message":"164","line":26,"column":13,"nodeType":"149","messageId":"150","endLine":26,"endColumn":27},{"ruleId":"158","severity":1,"message":"177","line":48,"column":6,"nodeType":"178","endLine":48,"endColumn":8,"suggestions":"179"},{"ruleId":"147","severity":1,"message":"180","line":57,"column":9,"nodeType":"149","messageId":"150","endLine":57,"endColumn":22},{"ruleId":"158","severity":1,"message":"181","line":64,"column":6,"nodeType":"178","endLine":64,"endColumn":23,"suggestions":"182"},{"ruleId":"147","severity":1,"message":"164","line":70,"column":13,"nodeType":"149","messageId":"150","endLine":70,"endColumn":27},{"ruleId":"158","severity":1,"message":"177","line":91,"column":6,"nodeType":"178","endLine":91,"endColumn":15,"suggestions":"183"},{"ruleId":"147","severity":1,"message":"184","line":1,"column":46,"nodeType":"149","messageId":"150","endLine":1,"endColumn":56},{"ruleId":"147","severity":1,"message":"185","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":20},{"ruleId":"147","severity":1,"message":"186","line":12,"column":11,"nodeType":"149","messageId":"150","endLine":12,"endColumn":17},{"ruleId":"158","severity":1,"message":"187","line":37,"column":6,"nodeType":"178","endLine":37,"endColumn":22,"suggestions":"188"},{"ruleId":"147","severity":1,"message":"164","line":56,"column":13,"nodeType":"149","messageId":"150","endLine":56,"endColumn":27},{"ruleId":"158","severity":1,"message":"177","line":77,"column":6,"nodeType":"178","endLine":77,"endColumn":15,"suggestions":"189"},{"ruleId":"158","severity":1,"message":"181","line":83,"column":6,"nodeType":"178","endLine":83,"endColumn":23,"suggestions":"190"},{"ruleId":"147","severity":1,"message":"191","line":13,"column":3,"nodeType":"149","messageId":"150","endLine":13,"endColumn":15},{"ruleId":"147","severity":1,"message":"192","line":14,"column":3,"nodeType":"149","messageId":"150","endLine":14,"endColumn":20},{"ruleId":"147","severity":1,"message":"193","line":38,"column":5,"nodeType":"149","messageId":"150","endLine":38,"endColumn":18},{"ruleId":"147","severity":1,"message":"194","line":40,"column":5,"nodeType":"149","messageId":"150","endLine":40,"endColumn":19},{"ruleId":"147","severity":1,"message":"195","line":43,"column":5,"nodeType":"149","messageId":"150","endLine":43,"endColumn":16},{"ruleId":"147","severity":1,"message":"174","line":44,"column":5,"nodeType":"149","messageId":"150","endLine":44,"endColumn":22},{"ruleId":"158","severity":1,"message":"196","line":103,"column":6,"nodeType":"178","endLine":103,"endColumn":22,"suggestions":"197"},{"ruleId":"147","severity":1,"message":"198","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":13},{"ruleId":"147","severity":1,"message":"199","line":3,"column":30,"nodeType":"149","messageId":"150","endLine":3,"endColumn":33},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Send' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"200","text":"201"},"'Button' is defined but never used.","'videoLoaded' is assigned a value but never used.","'setVideoLoaded' is assigned a value but never used.","react-hooks/exhaustive-deps","The ref value 'imageRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'imageRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'setCompleted' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'useEffect' is defined but never used.","'scrollPosition' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useLocation' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useLayoutEffect' is defined but never used.","'MainImage' is defined but never used.","'navBarHeight' is assigned a value but never used.","'refAbout' is assigned a value but never used.","'changePageToAbout' is assigned a value but never used.","'setChangePageToAbout' is assigned a value but never used.","'refServices' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setActiveSection'. Either include it or remove the dependency array.","ArrayExpression",["202"],"'scrollToAbout' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'mainRef.current'. Either exclude it or remove the dependency array. Mutable values like 'mainRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["203"],["204"],"'useContext' is defined but never used.","'AllContext' is defined but never used.","'topBar' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navBarHeight'. Either include it or remove the dependency array. Mutable values like 'navRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["205"],["206"],["207"],"'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'setRefContact' is assigned a value but never used.","'setRefServices' is assigned a value but never used.","'setAboutRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNavBarHeight'. Either include it or remove the dependency array. Mutable values like 'refApp.current' aren't valid dependencies because mutating them doesn't re-render the component.",["208"],"'React' is defined but never used.","'doc' is defined but never used.",[4693,4693]," rel=\"noreferrer\"",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"213","fix":"217"},{"desc":"211","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [setActiveSection]",{"range":"221","text":"222"},"Update the dependencies array to be: []",{"range":"223","text":"224"},"Update the dependencies array to be: [loading, setActiveSection]",{"range":"225","text":"226"},"Update the dependencies array to be: [navBarHeight]",{"range":"227","text":"228"},{"range":"229","text":"226"},{"range":"230","text":"224"},"Update the dependencies array to be: [setNavBarHeight]",{"range":"231","text":"232"},[1653,1655],"[setActiveSection]",[2022,2039],"[]",[2824,2833],"[loading, setActiveSection]",[1261,1277],"[navBarHeight]",[2544,2553],[2695,2712],[2587,2603],"[setNavBarHeight]"]