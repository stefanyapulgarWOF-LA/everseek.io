[{"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Context/AllContext.jsx":"1","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Lang/LangProvider.jsx":"2","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/404.js":"3","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/About.jsx":"4","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/ContactUs.jsx":"5","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/MainImage.jsx":"6","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/Map.jsx":"7","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/Services.jsx":"8","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_app.jsx":"9","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_document.js":"10","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/about-us.jsx":"11","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/index.jsx":"12","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/nav-bar.jsx":"13","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/SendEmail.jsx":"14","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/firebase.js":"15","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/index.js":"16","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/reportWebVitals.js":"17"},{"size":1524,"mtime":1688504671892,"results":"18","hashOfConfig":"19"},{"size":1624,"mtime":1688504625829,"results":"20","hashOfConfig":"19"},{"size":2697,"mtime":1688760632483,"results":"21","hashOfConfig":"19"},{"size":2092,"mtime":1689010881889,"results":"22","hashOfConfig":"19"},{"size":30035,"mtime":1689017319609,"results":"23","hashOfConfig":"19"},{"size":2761,"mtime":1689008048652,"results":"24","hashOfConfig":"19"},{"size":366,"mtime":1689011119071,"results":"25","hashOfConfig":"19"},{"size":10451,"mtime":1689007082801,"results":"26","hashOfConfig":"19"},{"size":683,"mtime":1688763671378,"results":"27","hashOfConfig":"19"},{"size":2141,"mtime":1688763305885,"results":"28","hashOfConfig":"19"},{"size":4684,"mtime":1689010458680,"results":"29","hashOfConfig":"19"},{"size":5574,"mtime":1689010542377,"results":"30","hashOfConfig":"19"},{"size":15310,"mtime":1689008692145,"results":"31","hashOfConfig":"19"},{"size":702,"mtime":1688158999296,"results":"32","hashOfConfig":"19"},{"size":618,"mtime":1686327366129,"results":"33","hashOfConfig":"19"},{"size":305,"mtime":1689017702605,"results":"34","hashOfConfig":"19"},{"size":362,"mtime":1685381948198,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"11y3r1b",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Context/AllContext.jsx",["98","99"],[],"import { createContext, useState, useEffect, useContext } from \"react\";\n\nconst AllContext = createContext();\nexport function useAllContext() {\n  return useContext(AllContext);\n}\n\nconst PageContext = ({ children }) => {\n  const [refContact, setRefContact] = useState();\n  const [refServices, setRefServices] = useState();\n  const [changePage, setChangePage] = useState(false);\n  const [changePageToAbout, setChangePageToAbout] = useState(false);\n  const [activeSection, setActiveSection] = useState(\"\");\n  const [refNav, setRefNav] = useState();\n  const [refAbout, setRefAbout] = useState();\n\n  const handleScroll = (sections) => {\n    const scrollPosition = window.pageYOffset;\n    let currentSection = \"\";\n    sections.forEach((section) => {\n      const sectionId = section.getAttribute(\"id\");\n      const sectionTop = section.offsetTop;\n      const sectionHeight = section.offsetHeight;\n\n      if (\n        window.pageYOffset >= sectionTop - sectionHeight / 2 &&\n        window.pageYOffset < sectionTop + sectionHeight\n      ) {\n        currentSection = sectionId;\n      }\n    });\n\n    setActiveSection(currentSection);\n  };\n  const value = {\n    refContact,\n    setRefContact,\n    refServices,\n    setRefServices,\n    changePage,\n    setChangePage,\n    activeSection,\n    setActiveSection,\n    handleScroll,\n    refNav,\n    setRefNav,refAbout, setRefAbout, changePageToAbout, setChangePageToAbout\n  };\n\n  return <AllContext.Provider value={value}>{children}</AllContext.Provider>;\n};\n\nexport { PageContext, AllContext };\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Lang/LangProvider.jsx",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/404.js",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/About.jsx",["100"],[],"import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { FormattedMessage } from \"react-intl\";\nimport { useEffect, useState } from \"react\";\n\nexport default function About({navBarHeight}) {\n  const [anchoViewport, setAnchoViewport] = useState()\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      let anchoViewport = window?.outerWidth;\n      setAnchoViewport(anchoViewport)\n    }\n  }, []);\n\n  return (\n    <Box sx={{margin:{xs:\"none\", md:'140px 220px'}, display:{md:'flex'}, alignItems:'center', marginTop:`${navBarHeight + 10}px`}}>\n      <Box sx={{display:'flex', justifyContent:'center', flexDirection:{md:'column'}, alignItems:'center', margin:{md:'50px 100px'}, marginBottom:{xs:'10px'}}}>\n        <img src=\"/assets/icono-06.svg\" style={{width:anchoViewport * 0.0520833333}}/>\n        <Box sx={{display:'flex', marginLeft:{xs:'10px'}}}>\n           <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#0060a6\",\n            fontWeight: 600,\n            fontSize: `clamp(25px,${anchoViewport * 0.026455026}px,40px)`,\n            marginRight:'10px'\n          }}\n        >\n          <FormattedMessage id=\"about.item1\" defaultMessage={\"About us\"} />\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#FC7128\",\n            fontWeight: 600,\n            fontSize: `clamp(25px,${anchoViewport * 0.026455026}px,40px)`,\n          }}\n        >\n          <FormattedMessage id=\"about.item2\" defaultMessage={\"About us\"} />\n        </Typography> \n        </Box>\n      </Box>\n      <Box sx={{marginBottom:{xs:'10px'}}}>\n        <Typography sx={{marginX:{xs:\"20px\",md:'60px'},textAlign:'justify', color: \"#0060a6\", fontFamily:\"Source Sans Pro, sans serif\", fontSize:`clamp(14px,${anchoViewport*0.0119047619}px,20px)`, fontWeight:300}}>\n          <FormattedMessage id=\"about.item3\" defaultMessage={\"text\"}  values={{ br: <br />, b: (chunks) => <strong>{chunks}</strong>}}/>\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/ContactUs.jsx",["101","102","103"],[],"import { React, useState, useRef, useEffect } from \"react\";\nimport {\n  Box,\n  Grid,\n  Typography,\n  Stack,\n  TextField,\n  Button,\n  Divider,\n} from \"@mui/material\";\nimport { FormattedMessage } from \"react-intl\";\nimport SendEmail from \"../../SendEmail\";\nimport MarkEmailReadIcon from \"@mui/icons-material/MarkEmailRead\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\n\nexport default function ContactUs({ nav }) {\n  const [contactForm, setContactForm] = useState({});\n  const [isValidEmail, setIsValidEmail] = useState(true);\n  const [sendedMessage, setSendedMessage] = useState(false);\n  const refBox = useRef();\n  const [anchoViewport, setAnchoViewport] = useState();\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      let anchoViewport = window?.outerWidth;\n      setAnchoViewport(anchoViewport);\n    }\n  }, []);\n  let location = useRouter();\n\n  const navigateTo = (path) => {\n    location.push(path);\n  };\n\n  const SendedMessage = () => {\n    return (\n      <Box\n        height={refBox?.current?.clientHeight - 17}\n        gap={1}\n        display={\"flex\"}\n        flexDirection={\"column\"}\n        alignItems={\"center\"}\n        justifyContent={\"center\"}\n      >\n        <Box height={\"80px\"} width={\"80px\"}>\n          <MarkEmailReadIcon sx={{ fontSize: \"80px\", color: \"#fff\" }} />\n        </Box>\n        <Typography\n          variant=\"h2\"\n          fontFamily=\"Open Sans, sans serif\"\n          fontSize={\"30px\"}\n          fontWeight={500}\n          color={\"#fff\"}\n          lineHeight={1.3}\n          letterSpacing={2}\n          marginBottom={\"20px\"}\n        >\n          <FormattedMessage\n            id=\"contact.item8\"\n            defaultMessage={\"contact success\"}\n            values={{ br: <br /> }}\n          />\n        </Typography>\n\n        <Typography\n          variant=\"span\"\n          fontSize={\"15px\"}\n          fontFamily=\"Open Sans, sans serif\"\n          fontWeight={400}\n          color={\"#fff\"}\n          lineHeight={1.3}\n          letterSpacing={1}\n          textAlign={\"center\"}\n        >\n          <FormattedMessage\n            id=\"contact.item9\"\n            defaultMessage={\"contact successMessage\"}\n            values={{ br: <br /> }}\n          />\n        </Typography>\n      </Box>\n    );\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isValidEmail) {\n      //enviar a api rest\n      try {\n        const res = await axios.post(\n          \"https://us-central1-everseek-core.cloudfunctions.net/Send_email_to_everseek\",\n          JSON.stringify(contactForm)\n        );\n        if (res.status === 200) {\n          SendEmail(\n            contactForm.nombre,\n            contactForm.last_name,\n            contactForm.email,\n            contactForm.mensaje\n          );\n          setSendedMessage(true);\n        } else {\n          alert(\"error\");\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n        alert(\"Error al realizar la solicitud\");\n      }\n    } else {\n      alert(\"Correo Electrónico no válido\");\n    }\n  };\n\n  const handleInputChange = (e) => {\n    if (e.target.name === \"email\") {\n      const email = e.target.value;\n      if (email.includes(\"@\") && email.includes(\".\")) {\n        setIsValidEmail(true);\n      } else {\n        setIsValidEmail(false);\n      }\n    }\n    setContactForm({\n      ...contactForm,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  if (anchoViewport < 550) {\n    return (\n      <Box sx={{ backgroundColor: \"#06293F\", paddingX:'15px' }}>\n        <Box sx={{display:'flex', justifyContent:'center'}}>\n          <Typography\n            sx={{\n              color: \"#fff\",\n              fontWeight: 600,\n              fontSize: `clamp(30px,${anchoViewport * 0.026455026}px,40px)`,\n              fontFamily: \"Source Sans Pro, sans serif\",\n              lineHeight: \"1.2\", marginY:'20px'\n            }}\n          >\n            <FormattedMessage id=\"contact.item1\" />\n          </Typography>\n        </Box>\n        <Grid\n          ref={refBox}\n          item\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Box>\n            <Box sx={{ display: \"flex\", my: \"0px\", justifyContent:'space-around'}}>\n              <Typography\n              sx={{\n                color: \"#fff\",\n                fontSize: \"16px\",\n                fontFamily: \"Open Sans, sans serif\",\n              }}\n            >\n              info@everseek.io\n            </Typography>\n              {/* <LinkedInIcon\n                fontSize=\"large\"\n                sx={{ color: \"rgb(252,113,40)\" }}\n              /> */}\n              <a\n                href=\"https://www.linkedin.com/company/everseek\"\n                target={\"_blank\"}\n              >\n                <img\n                  src=\"/assets/linkedin.png\"\n                  alt=\"linkedin\"\n                  style={{ width: \"30px\" }}\n                />\n              </a>\n              {/* <img src=\"/icons/twitter.png\" alt=\"linkedin\" style={{width:'30px'}}/> */}\n            </Box>\n            <Typography\n              sx={{\n                color: \"#fff\",\n                fontSize: \"16px\",\n                fontFamily: \"Open Sans, sans serif\",\n                width: \"100%\",\n                marginBottom: \"20px\",\n                textAlign:\"justify\"\n              }}\n            >\n              <FormattedMessage id=\"contact.item2\" />.\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item>\n          {sendedMessage ? (\n            <SendedMessage />\n          ) : (\n            <form onSubmit={handleSubmit}>\n              <Stack gap={1}>\n                <Box sx={{ display: \"flex\", marginBottom: \"10px\" }}>\n                  <TextField\n                    fullWidth\n                    name=\"nombre\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    onChange={handleInputChange}\n                    label={\n                      <FormattedMessage\n                        id=\"contact.item3\"\n                        defaultMessage={\"name\"}\n                      />\n                    }\n                    InputProps={{\n                      disableUnderline: true, // Deshabilita la línea debajo del TextField\n                      sx: {\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                        \":focus-visible\": {\n                          outline: \"none\",\n                        },\n                        \":hover\": { backgroundColor: \"#fff !important\" },\n                        \"&:not(.Mui-focused)\": {\n                          backgroundColor: \"#fff !important\",\n                        },\n                      },\n                    }}\n                    sx={{\n                      \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                        { backgroundColor: \"#fff\" },\n                      \".MuiInputBase-input.MuiFilledInput-input\": {\n                        fontFamily: \"Open Sans, sans serif !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiInputLabel-root\": {\n                        color: \"#9a9a9b\",\n                        fontFamily: \"Open Sans, sans serif !important\",\n                      },\n                      marginRight: \"5px\",\n                      color: \"#fff !important\",\n                      \".MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"#fff !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                    }}\n                    required\n                  />\n                  <TextField\n                    fullWidth\n                    name=\"last_name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    onChange={handleInputChange}\n                    label={\n                      <FormattedMessage\n                        id=\"contact.item4\"\n                        defaultMessage={\"last name\"}\n                      />\n                    }\n                    InputProps={{\n                      disableUnderline: true, // Deshabilita la línea debajo del TextField\n                      sx: {\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                        \":focus-visible\": {\n                          outline: \"none\",\n                        },\n                        \":hover\": { backgroundColor: \"#fff !important\" },\n                        \"&:not(.Mui-focused)\": {\n                          backgroundColor: \"#fff !important\",\n                        },\n                      },\n                    }}\n                    sx={{\n                      \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                        { backgroundColor: \"#fff\" },\n                      \".MuiInputBase-input-MuiFilledInput-input\": {\n                        fontFamily: \"Open Sans, sans serif !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiInputLabel-root\": {\n                        color: \"#9a9a9b\",\n                        fontFamily: \"Open Sans, sans serif !important\",\n                      },\n                      marginRight: \"5px\",\n                      color: \"#fff !important\",\n                      \".MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"#fff !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                    }}\n                    required\n                  />\n                </Box>\n\n                <TextField\n                  name=\"email\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  onError={() => (isValidEmail ? false : true)}\n                  helperText={isValidEmail ? \"\" : \"Correo no valido\"}\n                  onChange={handleInputChange}\n                  label={\n                    <FormattedMessage\n                      id=\"contact.item7\"\n                      defaultMessage={\"email\"}\n                    />\n                  }\n                  InputProps={{\n                    disableUnderline: true, // Deshabilita la línea debajo del TextField\n                    sx: {\n                      backgroundColor: \"#fff !important\",\n                      borderRadius: \"10px\",\n                      \":focus-visible\": {\n                        outline: \"none\",\n                      },\n                      \":hover\": { backgroundColor: \"#fff !important\" },\n                      \"&:not(.Mui-focused)\": {\n                        backgroundColor: \"#fff !important\",\n                      },\n                    },\n                  }}\n                  sx={{\n                    marginBottom: \"10px\",\n                    \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                      { backgroundColor: \"#fff\" },\n                    \".MuiInputBase-input-MuiFilledInput-input\": {\n                      fontFamily: \"Open Sans, sans serif !important\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: \"10px\",\n                    },\n                    \".MuiInputLabel-root\": {\n                      color: \"#9a9a9b\",\n                      fontFamily: \"Open Sans, sans serif !important\",\n                    },\n                    marginRight: \"5px\",\n                    color: \"#fff !important\",\n                    \".MuiOutlinedInput-notchedOutline\": {\n                      borderColor: \"#fff !important\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: \"10px\",\n                    },\n                    \".MuiFormHelperText-root\": { color: \"#fff !important\" },\n                  }}\n                  required\n                />\n                <TextField\n                  name=\"mensaje\"\n                  type=\"text\"\n                  variant=\"filled\"\n                  minRows={5}\n                  maxRows={7}\n                  onChange={handleInputChange}\n                  label={\n                    <FormattedMessage\n                      id=\"contact.item5\"\n                      defaultMessage={\"message\"}\n                    />\n                  }\n                  multiline\n                  InputProps={{\n                    disableUnderline: true, // Deshabilita la línea debajo del TextField\n                    sx: {\n                      backgroundColor: \"#fff !important\",\n                      borderRadius: \"10px\",\n                      \":focus-visible\": {\n                        outline: \"none\",\n                      },\n                      \":hover\": { backgroundColor: \"#fff !important\" },\n                      \"&:not(.Mui-focused)\": {\n                        backgroundColor: \"#fff !important\",\n                      },\n                    },\n                  }}\n                  InputLabelProps={{\n                    sx: {\n                      color: \"#06293F\",\n                    },\n                  }}\n                  sx={{\n                    marginBottom: \"10px\",\n                    \"label[data-shrink=false]+.MuiInputBase-formControl .css-10botns-MuiInputBase-input-MuiFilledInput-input\":\n                      { backgroundColor: \"#fff\" },\n                    \".MuiInputBase-input.MuiFilledInput-input\": {\n                      fontFamily: \"Open Sans, sans serif !important\",\n                      backgroundColor: \"#fff !important\",\n                      borderRadius: \"10px\",\n                    },\n                    \".MuiInputLabel-root\": {\n                      color: \"#9a9a9b\",\n                      fontFamily: \"Open Sans, sans serif !important\",\n                    },\n                    marginRight: \"5px\",\n                    color: \"#fff !important\",\n                    \".MuiOutlinedInput-notchedOutline\": {\n                      borderColor: \"#fff !important\",\n                      backgroundColor: \"#fff\",\n                      borderRadius: \"10px\",\n                    },\n                  }}\n                  required\n                />\n              </Stack>\n              <Box\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Button\n                  sx={{\n                    backgroundColor: \"#fff\",\n                    width: \"160px\",\n                    color: \"#06293F\",\n                    fontWeight: 600,\n                    fontFamily: \"Source Sans Pro, sans-serif\",\n                    textTransform: \"initial\",\n                    borderRadius: \"20px\",\n                    padding: \"2px 20px\",\n                    marginTop: \"12px\",\n                    fontSize: \"14px\",\n                    letterSpacing: 1,\n                    \":hover\": {\n                      backgroundColor: \"#fff\",\n                      color: \"#06293F\",\n                    },\n                  }}\n                  type={\"Submit\"}\n                >\n                  <FormattedMessage\n                    id=\"contact.item6\"\n                    defaultMessage={\"submit\"}\n                  />{\" \"}\n                </Button>\n              </Box>\n            </form>\n          )}\n        </Grid>\n        <Divider sx={{ backgroundColor: \"#fff\", my: \"30px\" }} />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: { xs: \"center\", md: \"space-between\" },\n            alignItems: \"center\",\n            paddingBottom: \"30px\",\n          }}\n        >\n          <img\n            onClick={() =>\n              location.pathname === \"/about-us\" ? navigateTo(\"/\") : nav()\n            }\n            src=\"/assets/Everseek-blanco.png\"\n            alt=\"logo\"\n            style={{ width: \"230px\", cursor: \"pointer\" }}\n          />\n        </Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"#06293F\",\n        paddingTop: \"20px\",\n      }}\n    >\n      <Box sx={{ padding: { xs: \"20px 60px\", md: \"90px 210px\" } }}>\n        <Grid container spacing={2}>\n          <Grid\n            ref={refBox}\n            item\n            xs={5}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Box>\n              <Typography\n                sx={{\n                  color: \"#fff\",\n                  fontWeight: 600,\n                  fontSize: `clamp(30px,${anchoViewport * 0.026455026}px,40px)`,\n                  fontFamily: \"Source Sans Pro, sans serif\",\n                  lineHeight: \"1.2\",\n                }}\n              >\n                <FormattedMessage id=\"contact.item1\" />\n              </Typography>\n            </Box>\n            <Box>\n              <Typography\n                sx={{\n                  color: \"#fff\",\n                  fontSize: \"16px\",\n                  fontFamily: \"Open Sans, sans serif\",\n                }}\n              >\n                info@everseek.io\n              </Typography>\n              <Box sx={{ display: \"flex\", my: \"30px\" }}>\n                {/* <LinkedInIcon\n                fontSize=\"large\"\n                sx={{ color: \"rgb(252,113,40)\" }}\n              /> */}\n                <a\n                  href=\"https://www.linkedin.com/company/everseek\"\n                  target={\"_blank\"}\n                >\n                  <img\n                    src=\"/assets/linkedin.png\"\n                    alt=\"linkedin\"\n                    style={{ width: \"30px\" }}\n                  />\n                </a>\n                {/* <img src=\"/icons/twitter.png\" alt=\"linkedin\" style={{width:'30px'}}/> */}\n              </Box>\n              <Typography\n                sx={{\n                  color: \"#fff\",\n                  fontSize: \"16px\",\n                  fontFamily: \"Open Sans, sans serif\",\n                  width: \"70%\",\n                  marginBottom: \"20px\",\n                }}\n              >\n                <FormattedMessage id=\"contact.item2\" />\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item xs={7}>\n            {sendedMessage ? (\n              <SendedMessage />\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <Stack gap={1}>\n                  <Box sx={{ display: \"flex\", marginBottom: \"10px\" }}>\n                    <TextField\n                      fullWidth\n                      name=\"nombre\"\n                      type=\"text\"\n                      variant=\"filled\"\n                      onChange={handleInputChange}\n                      label={\n                        <FormattedMessage\n                          id=\"contact.item3\"\n                          defaultMessage={\"name\"}\n                        />\n                      }\n                      InputProps={{\n                        disableUnderline: true, // Deshabilita la línea debajo del TextField\n                        sx: {\n                          backgroundColor: \"#fff !important\",\n                          borderRadius: \"10px\",\n                          \":focus-visible\": {\n                            outline: \"none\",\n                          },\n                          \":hover\": { backgroundColor: \"#fff !important\" },\n                          \"&:not(.Mui-focused)\": {\n                            backgroundColor: \"#fff !important\",\n                          },\n                        },\n                      }}\n                      sx={{\n                        \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                          { backgroundColor: \"#fff\" },\n                        \".MuiInputBase-input.MuiFilledInput-input\": {\n                          fontFamily: \"Open Sans, sans serif !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                        \".MuiInputLabel-root\": {\n                          color: \"#9a9a9b\",\n                          fontFamily: \"Open Sans, sans serif !important\",\n                        },\n                        marginRight: \"5px\",\n                        color: \"#fff !important\",\n                        \".MuiOutlinedInput-notchedOutline\": {\n                          borderColor: \"#fff !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                      }}\n                      required\n                    />\n                    <TextField\n                      fullWidth\n                      name=\"last_name\"\n                      type=\"text\"\n                      variant=\"filled\"\n                      onChange={handleInputChange}\n                      label={\n                        <FormattedMessage\n                          id=\"contact.item4\"\n                          defaultMessage={\"last name\"}\n                        />\n                      }\n                      InputProps={{\n                        disableUnderline: true, // Deshabilita la línea debajo del TextField\n                        sx: {\n                          backgroundColor: \"#fff !important\",\n                          borderRadius: \"10px\",\n                          \":focus-visible\": {\n                            outline: \"none\",\n                          },\n                          \":hover\": { backgroundColor: \"#fff !important\" },\n                          \"&:not(.Mui-focused)\": {\n                            backgroundColor: \"#fff !important\",\n                          },\n                        },\n                      }}\n                      sx={{\n                        \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                          { backgroundColor: \"#fff\" },\n                        \".MuiInputBase-input-MuiFilledInput-input\": {\n                          fontFamily: \"Open Sans, sans serif !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                        \".MuiInputLabel-root\": {\n                          color: \"#9a9a9b\",\n                          fontFamily: \"Open Sans, sans serif !important\",\n                        },\n                        marginRight: \"5px\",\n                        color: \"#fff !important\",\n                        \".MuiOutlinedInput-notchedOutline\": {\n                          borderColor: \"#fff !important\",\n                          backgroundColor: \"#fff\",\n                          borderRadius: \"10px\",\n                        },\n                      }}\n                      required\n                    />\n                  </Box>\n\n                  <TextField\n                    name=\"email\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    onError={() => (isValidEmail ? false : true)}\n                    helperText={isValidEmail ? \"\" : \"Correo no valido\"}\n                    onChange={handleInputChange}\n                    label={\n                      <FormattedMessage\n                        id=\"contact.item7\"\n                        defaultMessage={\"email\"}\n                      />\n                    }\n                    InputProps={{\n                      disableUnderline: true, // Deshabilita la línea debajo del TextField\n                      sx: {\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                        \":focus-visible\": {\n                          outline: \"none\",\n                        },\n                        \":hover\": { backgroundColor: \"#fff !important\" },\n                        \"&:not(.Mui-focused)\": {\n                          backgroundColor: \"#fff !important\",\n                        },\n                      },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      \"label[data-shrink=false]+.MuiInputBase-formControl .MuiInputBase-input-MuiFilledInput-input\":\n                        { backgroundColor: \"#fff\" },\n                      \".MuiInputBase-input-MuiFilledInput-input\": {\n                        fontFamily: \"Open Sans, sans serif !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiInputLabel-root\": {\n                        color: \"#9a9a9b\",\n                        fontFamily: \"Open Sans, sans serif !important\",\n                      },\n                      marginRight: \"5px\",\n                      color: \"#fff !important\",\n                      \".MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"#fff !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiFormHelperText-root\": { color: \"#fff !important\" },\n                    }}\n                    required\n                  />\n                  <TextField\n                    name=\"mensaje\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    minRows={5}\n                    maxRows={7}\n                    onChange={handleInputChange}\n                    label={\n                      <FormattedMessage\n                        id=\"contact.item5\"\n                        defaultMessage={\"message\"}\n                      />\n                    }\n                    multiline\n                    InputProps={{\n                      disableUnderline: true, // Deshabilita la línea debajo del TextField\n                      sx: {\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                        \":focus-visible\": {\n                          outline: \"none\",\n                        },\n                        \":hover\": { backgroundColor: \"#fff !important\" },\n                        \"&:not(.Mui-focused)\": {\n                          backgroundColor: \"#fff !important\",\n                        },\n                      },\n                    }}\n                    InputLabelProps={{\n                      sx: {\n                        color: \"#06293F\",\n                      },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      \"label[data-shrink=false]+.MuiInputBase-formControl .css-10botns-MuiInputBase-input-MuiFilledInput-input\":\n                        { backgroundColor: \"#fff\" },\n                      \".MuiInputBase-input.MuiFilledInput-input\": {\n                        fontFamily: \"Open Sans, sans serif !important\",\n                        backgroundColor: \"#fff !important\",\n                        borderRadius: \"10px\",\n                      },\n                      \".MuiInputLabel-root\": {\n                        color: \"#9a9a9b\",\n                        fontFamily: \"Open Sans, sans serif !important\",\n                      },\n                      marginRight: \"5px\",\n                      color: \"#fff !important\",\n                      \".MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"#fff !important\",\n                        backgroundColor: \"#fff\",\n                        borderRadius: \"10px\",\n                      },\n                    }}\n                    required\n                  />\n                </Stack>\n                <Box\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"start\",\n                  }}\n                >\n                  <Button\n                    sx={{\n                      backgroundColor: \"#fff\",\n                      width: \"160px\",\n                      color: \"#06293F\",\n                      fontWeight: 600,\n                      fontFamily: \"Source Sans Pro, sans-serif\",\n                      textTransform: \"initial\",\n                      borderRadius: \"20px\",\n                      padding: \"2px 20px\",\n                      marginTop: \"12px\",\n                      fontSize: \"14px\",\n                      letterSpacing: 1,\n                      \":hover\": {\n                        backgroundColor: \"#fff\",\n                        color: \"#06293F\",\n                      },\n                    }}\n                    type={\"Submit\"}\n                  >\n                    <FormattedMessage\n                      id=\"contact.item6\"\n                      defaultMessage={\"submit\"}\n                    />{\" \"}\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Grid>\n        </Grid>\n        <Divider sx={{ backgroundColor: \"#fff\", my: \"70px\" }} />\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: { xs: \"center\", md: \"space-between\" },\n            alignItems: \"center\",\n            marginTop: \"-20px\",\n          }}\n        >\n          <img\n            onClick={() =>\n              location.pathname === \"/about-us\" ? navigateTo(\"/\") : nav()\n            }\n            src=\"/assets/Everseek-blanco.png\"\n            alt=\"logo\"\n            style={{ width: \"230px\", cursor: \"pointer\" }}\n          />\n          <Typography\n            sx={{\n              display: { xs: \"none\", md: \"flex\" },\n              color: \"#fff\",\n              fontFamily: \"Open Sans\",\n            }}\n          >\n            EVERSEEK.IO | Privacy Policy\n          </Typography>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/MainImage.jsx",["104","105","106"],[],"import {React, useRef, useEffect, useState} from \"react\";\nimport { Box, Typography, Button } from \"@mui/material\";\nimport { FormattedMessage } from \"react-intl\";\n\n/**\n * Componente que contiene la imagen principal\n * @returns\n */\nexport default function MainImage({service, anchoViewport, src}) {\n  const [videoLoaded, setVideoLoaded] = useState(false);\n  const [videoHeight, setVideoHeight] = useState(200);\n  const imageRef = useRef();\n\n  useEffect(() => {\n    // const handleImageLoad = () => {\n      const height = imageRef?.current?.offsetHeight;\n      setVideoHeight(height);\n    // };\n  \n    // if (typeof window !== 'undefined' && imageRef.current) {\n    //   imageRef.current.addEventListener('load', handleImageLoad);\n    // }\n  \n    // return () => {\n    //   if (typeof window !== 'undefined' && imageRef.current) {\n    //     imageRef.current.removeEventListener('load', handleImageLoad);\n    //   }\n    // };\n  }, []);\n\n  return (\n    <Box sx={{ width: \"100%\", height: {xs:videoHeight + 70,md:videoHeight} }}>\n      {/* <video autoPlay loop muted ref={videoRef} style={{ width: \"100%\", position: \"absolute\", zIndex: \"-1\", top:55 }}>\n        <source src=\"/assets/Imagen-principal.mp4\" type=\"video/mp4\" />\n      </video> */}\n      <img\n        ref={imageRef}\n        src={src}\n        alt=\"img-principal\"\n        style={{ width: \"100%\", position: \"absolute\", zIndex: \"-1\", top:55 }}\n      />\n      <Box sx={{ paddingLeft: anchoViewport*0.0066137566, paddingTop: {xs:(anchoViewport*0.013227513)+5, md:anchoViewport*0.013227513} }}>\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans-serif\",\n            fontWeight: 600,\n            fontSize:`clamp(22px,${anchoViewport*0.03306878306878307}px,50px)`,\n            color: \"#fff\",\n            lineHeight: \"1.2\",\n          }}\n        >\n          <FormattedMessage id=\"main.item0\" defaultMessage=\"title\"  values={{ br: <br />} } />\n        </Typography>\n        {/* <Box sx={{width:'130px', border: \"1px solid #FC7128\",display:'flex', justifyContent:'center', borderRadius: \"25px\",marginTop:'10px'}}>\n          {\" \"}\n          <Button\n          onClick={service}\n            sx={{\n                \":hover\":{background: \"rgb(255, 255, 255, 0.7)\",            },\n              color: \"#FC7128\",\n              textTransform: \"initial\",\n              fontFamily: \"Source Sans Pro, sans-serif\",\n              padding: \"0px 10px\",\n              opacity: \"1\",\n              fontWeight: 600,\n              background: \"rgb(255, 255, 255, 0.7)\",\n              width:'100%', \n              borderRadius: \"25px\"\n            }}\n          >\n            <FormattedMessage id=\"main.item1\" defaultMessage=\"Learn more\" />\n          </Button>\n        </Box> */}\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/Map.jsx",["107"],[],"import { Box } from \"@mui/system\"\n// import \"../index.css\"\n\nexport default function Map() {\n\n    return (\n        <Box sx={{width:'100%', display:'flex', justifyContent:'center', marginBottom:'80px'}} >\n            <Box sx={{width:{xs:\"100%\",md:'75%'}}}>\n                <img  src=\"/assets/Mapa.svg\" style={{width:'100%'}}/>\n            </Box>\n        </Box>\n    )\n}","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/Components/Services.jsx",["108","109","110"],[],"import React from \"react\";\nimport {\n  Box,\n  Typography,\n  Step,\n  Stepper,\n  StepButton,\n  StepContent,\n} from \"@mui/material\";\nimport { FormattedMessage } from \"react-intl\";\nimport CircleIcon from \"@mui/icons-material/Circle\";\n\nconst steps = [\n  \"Select campaign settings\",\n  \"Create an ad group\",\n  \"Create an ad\",\n];\nconst services = [\n  {\n    title: \"services.item2\",\n    description: \"services.item6\",\n    img: \"/assets/Imagen-principal.png\",\n  },\n  {\n    title: \"services.item10\",\n    description: \"services.item11\",\n    img: \"/assets/Imagen-principal.png\",\n  },\n  {\n    title: \"services.item3\",\n    description: \"services.item7\",\n  },\n  {\n    title: \"services.item5\",\n    description: \"services.item9\",\n  },\n  {\n    title: \"services.item4\",\n    description: \"services.item8\",\n  },\n];\nexport default function Services({ anchoViewport }) {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState({});\n\n  const totalSteps = () => {\n    return steps.length;\n  };\n\n  const completedSteps = () => {\n    return Object.keys(completed).length;\n  };\n\n  const isLastStep = () => {\n    return activeStep === totalSteps() - 1;\n  };\n\n  const allStepsCompleted = () => {\n    return completedSteps() === totalSteps();\n  };\n\n  const handleNext = () => {\n    const newActiveStep =\n      isLastStep() && !allStepsCompleted()\n        ? // It's the last step, but not all steps have been completed,\n          // find the first step that has been completed\n          steps.findIndex((step, i) => !(i in completed))\n        : activeStep + 1;\n    setActiveStep(newActiveStep);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleStep = (step) => () => {\n    setActiveStep(step);\n  };\n\n  return (\n    <Box sx={{ margin: { md: \"50px 230px\" } }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          paddingTop: \"20px\",\n          marginBottom: \"50px\",\n        }}\n      >\n        <Typography\n          sx={{\n            width: {xs:\"90%\",md:\"70%\"},\n            fontFamily: \"Open Sans\",\n            fontSize: `clamp(16px,${anchoViewport * 0.0165343915}px,25px)`,\n            textAlign: \"center\",\n            color: \"#05293f\",\n            fontWeight: 300,\n          }}\n        >\n          <FormattedMessage id={\"main.item2\"} defaultMessage=\"text\" />\n        </Typography>\n      </Box>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          marginBottom: \"30px\",\n          justifyContent: { xs: \"center\", md: \"flex-start\" },\n        }}\n      >\n        {/* <img\n          src=\"/assets/Forma E.png\"\n          alt=\"viñeta\"\n          style={{ width: \"50px\", marginRight: \"20px\" }}\n        /> */}\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#0060a6\",\n            fontWeight: 600,\n            fontSize: `clamp(30px,${anchoViewport * 0.026455026}px,40px)`,\n            marginRight: \"13px\",\n            marginLeft: { xs: \"6px\", md: \"-6px\" },\n          }}\n        >\n          <FormattedMessage id=\"services.item0\" defaultMessage=\"elev\" />\n        </Typography>\n        <Typography\n          sx={{\n            fontFamily: \"Source Sans Pro, sans serif\",\n            color: \"#FC7128\",\n            fontWeight: 600,\n            fontSize: `clamp(30px,${anchoViewport * 0.026455026}px,40px)`,\n          }}\n        >\n          <FormattedMessage id=\"services.item1\" defaultMessage=\"services\" />\n        </Typography>\n      </Box>\n      <Box\n        sx={{ marginBottom: \"25px\", display: \"flex\", justifyContent: \"center\" }}\n      >\n        <Typography\n          sx={{\n            fontFamily: \"Open Sans, sans serif\",\n            color: \"#05293f\",\n            fontSize: `clamp(16px,${anchoViewport * 0.0119047619}px,20px)`,\n            fontWeight: 300,\n            marginX:{xs:\"10px\"},\n            textAlign:{xs:\"center\", md:'inherit'},\n            width: {md: \"96.5%\" },\n          }}\n        >\n          <FormattedMessage\n            id=\"services.subtitulo\"\n            defaultMessage=\"services\"\n            values={{ br: <br /> }}\n          />\n        </Typography>\n      </Box>\n      {/* <Box>\n        <Typography sx={{fontFamily: \"Source Sans Pro, sans serif\",color: \"#FC7128\",}}>\n            <FormattedMessage id='services.item10' defaultMessage='description' />\n        </Typography>\n      </Box> */}\n      <Box sx={{ width: \"100%\", marginLeft: \"12px\", backgroundColor: \"\" }}>\n        <Stepper\n          nonLinear\n          activeStep={activeStep}\n          orientation=\"vertical\"\n          sx={{\n            \".MuiStepConnector-line\": {\n              borderColor: \"#0060a6 !important\",\n              height: \"75px !important\",\n              position: \"absolute !important\",\n              marginTop: {xs:\"-25px !important\", md: \"-20px !important\"},\n              marginLeft: \"-4px !important\",\n              zIndex: \"-1 !important\",\n            },\n            \".MuiStepContent-root\": {\n              borderLeft: \" 1px solid #0060a6 !important\",\n              marginTop: activeStep === 0 ? \"-20px !important\" : null,\n              marginLeft: \"8px !important\",\n            },\n            \".MuiStepLabel-iconContainer\": { width: \"25px\" },\n          }}\n        >\n          {services.map((label, index) => (\n            <Step key={index} completed={completed[index]}>\n              <StepButton\n                color=\"inherit\"\n                onClick={handleStep(index)}\n                TouchRippleProps={{\n                  classes: {\n                    rippleVisible: \"MuiTouchRipple-root-visible\",\n                    child: \"MuiTouchRipple-child\",\n                  },\n                }}\n                icon={\n                  <CircleIcon\n                    sx={{\n                      color: \"#F3632E\",\n                      position: \"relative\",\n                      top: \"2px\",\n                      width: \"100%\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  />\n                }\n                sx={{\n                  \"&:focus\": {\n                    outline: \"none !important\",\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \"&.Mui-active\": {\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \".MuiTouchRipple-root-visible\": {\n                    backgroundColor: \"transparent !important\",\n                    opacity: \"0 !important\",\n                  },\n                  \".MuiTouchRipple-child\": {\n                    backgroundColor: \"transparent !important\",\n                    display: \"none !important\",\n                  },\n                  \".MuiSvgIcon-root.MuiStepIcon-root.Mui-active\": {\n                    color: \"transparent !important\",\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \".MuiSvgIcon-root.MuiStepIcon-root\": {\n                    color: \"transparent !important\",\n                    backgroundColor: \"transparent !important\",\n                  },\n                  \".MuiSvgIcon-root\": { height: \"0.8rem\" },\n                }}\n              >\n                <Typography\n                  sx={{\n                    fontFamily: \"Source Sans Pro, sans serif\",\n                    color: \"#0060a6\",\n                    fontWeight: 600,\n                    fontSize: `clamp(20px,${anchoViewport * 0.0165343915}px,25px)`,\n                    marginLeft: \"20px\",\n                  }}\n                >\n                  <FormattedMessage\n                    key={label}\n                    id={label.title}\n                    defaultMessage={\"color\"}\n                  />\n                </Typography>\n              </StepButton>\n              {activeStep === index ? (\n                <>\n                  <StepContent>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        flexDirection:{xs:'column', md:'row'},\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Box>\n                        <Typography\n                          sx={{\n                            mt: 2,\n                            mb: 1,\n                            py: 1,\n                            width: {md:\"550px\"},\n                            fontFamily: \"Open Sans, sans serif\",\n                            color: \"#05293f\",\n                            fontSize: `clamp(16px,${anchoViewport * 0.0119047619}px,18px)`,\n                            marginLeft: \"20px\",\n                            fontWeight: 300,\n                          }}\n                        >\n                          <FormattedMessage\n                            key={label}\n                            id={label.description}\n                            defaultMessage={\"color\"}\n                            values={{\n                              a: (link) => (\n                                <a\n                                  href=\"https://www.firehawkdetection.com/\"\n                                  target={\"_blank\"}\n                                  rel=\"noreferrer\"\n                                  style={{fontWeight:600, color:\"#0060a6\"}}\n                                >\n                                  {link}\n                                </a>\n                              ),\n                            }}\n                          />\n                        </Typography>\n                      </Box>\n\n                      <Box sx={{ display: \"flex\", justifyContent: \"center\" }}>\n                        <video\n                          autoPlay\n                          // loop\n                          muted\n                          src={`/assets/0${index + 1}.mp4`}\n                          alt=\"\"\n                          style={{ width: \"95%\", maxHeight: \"130px\" }}\n                        />\n                        <source\n                          src={`/assets/0${index + 1}.mp4`}\n                          type=\"video/mp4\"\n                        />\n                      </Box>\n                    </Box>\n                  </StepContent>\n                </>\n              ) : null}\n            </Step>\n          ))}\n        </Stepper>\n      </Box>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_app.jsx",["111","112","113","114"],[],"\nimport { LangProvider } from \"../Lang/LangProvider\";\nimport { React, useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport { PageContext } from \"../Context/AllContext\";\nimport \"./app.css\";\n\nfunction App({Component, pageProps}) {\n  // const Wrapper = ({ children }) => {\n  //   const location = useLocation();\n  //   useLayoutEffect(() => {\n  //     if (typeof window !== \"undefined\") {\n  //       document.documentElement.scrollTo(0, 0);\n  //     }\n  //   }, [location.pathname]);\n  //   return children;\n  // };\n\n  return (\n    <PageContext>\n      <LangProvider>\n      <Component {...pageProps} />\n      </LangProvider>\n    </PageContext>\n  );\n}\n\nexport default App;\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/_document.js",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/about-us.jsx",["115","116","117","118","119","120","121","122","123","124","125"],[],"import { React, useEffect, useState, useRef, Fragment } from \"react\";\nimport { Box } from \"@mui/material\";\nimport About from \"./Components/About\";\nimport MainImage from \"./Components/MainImage\";\nimport { useContext } from \"react\";\nimport { AllContext } from \"../Context/AllContext\";\nimport Map from \"./Components/Map\";\nimport ContactUs from \"./Components/ContactUs\";\nimport NavBar from \"./nav-bar\";\nimport Head from \"next/head\";\n\nexport default function AboutUs() {\n  const contactRef = useRef(null);\n  const aboutRef = useRef(null);\n  const mainRef = useRef(null);\n  const [loading, setLoading] = useState(false);\n  const [navBarHeight, setNavBarHeight] = useState(0);\n  console.log(\"🚀 ~ file: about-us.jsx:18 ~ AboutUs ~ navBarHeight:\", navBarHeight)\n  const {\n    setRefContact,\n    refNav,\n    refAbout,\n    setRefAbout,\n    changePageToAbout,\n    setChangePageToAbout,\n    refServices,\n    setActiveSection,\n  } = useContext(AllContext);\n\n  //Efecto para marcar la sección en la que se encuentra el scroll\n  useEffect(() => {\n    const sections = document.querySelectorAll(\"section\");\n\n    const handleScroll = () => {\n      const scrollPosition = window.pageYOffset;\n      let currentSection = \"\";\n      sections.forEach((section) => {\n        const sectionId = section.getAttribute(\"id\");\n        const sectionTop = section.offsetTop;\n        const sectionHeight = section.offsetHeight;\n\n        if (\n          window.pageYOffset >= sectionTop - sectionHeight / 2 &&\n          window.pageYOffset < sectionTop + sectionHeight\n        ) {\n          currentSection = sectionId;\n        }\n      });\n\n      setActiveSection(currentSection);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    setRefContact(contactRef);\n    setRefAbout(aboutRef);\n  });\n  const scrollToNav = () => {\n    refNav.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  const scrollToAbout = () => {\n    aboutRef?.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(true);\n    }, 500);\n  }, [mainRef.current]);\n\n  useEffect(() => {\n    const sections = document.querySelectorAll(\"section\");\n\n    const handleScroll = () => {\n      const scrollPosition = window.pageYOffset;\n      let currentSection = \"\";\n      sections.forEach((section) => {\n        const sectionId = section.getAttribute(\"id\");\n        const sectionTop = section.offsetTop;\n        const sectionHeight = section.offsetHeight;\n\n        if (\n          window.pageYOffset >= sectionTop - sectionHeight / 2 &&\n          window.pageYOffset < sectionTop + sectionHeight\n        ) {\n          currentSection = sectionId;\n        }\n      });\n      setActiveSection(currentSection);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [loading]);\n\n  // useEffect(() => {\n  //   if (changePageToAbout) {\n  //     setTimeout(() => {\n  //       scrollToAbout()\n  //       setChangePageToAbout(false)\n  //     }, 800);\n  //   }\n  // }, [changePageToAbout, setChangePageToAbout]);\nconsole.log(refNav)\n  return (\n    <Fragment>\n      <Head>\n        <title> Everseek.io</title>\n        <link rel=\"icon\" href=\"/assets/favicon.ico\" />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400;1,500&family=Source+Sans+Pro:ital,wght@0,200;0,300;0,400;0,600;0,700;1,400&display=swap\"\n          rel=\"stylesheet\"\n        />\n        <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\n        <meta\n          name=\"description\"\n          content=\"En Everseek, ofrecemos un servicio de detección temprana y notificación de incendios forestales que complementa el trabajo humano con Inteligencia Artificial.\"\n        />\n\n        {/* <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" defer></script>\n    <script src=\"https://smtpjs.com/v3/smtp.js\" defer></script> */}\n      </Head>\n      <Box sx={{}}>\n        <NavBar nav={scrollToNav} setNavBarHeight={setNavBarHeight} />\n        {loading? <>\n        <section ref={aboutRef} id=\"about\">\n          <About navBarHeight={navBarHeight}/>\n          <Map />\n        </section>\n        <section id=\"contact\" ref={contactRef}>\n          <ContactUs nav={scrollToNav} />\n        </section>\n        </> :null}\n      </Box>\n    </Fragment>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/index.jsx",["126","127","128","129","130","131","132"],[],"import { React, useRef, useEffect, useState, useContext } from \"react\";\nimport ContactUs from \"./Components/ContactUs\";\nimport MainImage from \"./Components/MainImage\";\nimport NavBar from \"./nav-bar\";\nimport Services from \"./Components/Services\";\n// import \"../styles/index.css\";\nimport { AllContext, useAllContext } from \"../Context/AllContext\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\n\nimport { Fragment } from \"react\";\n\nexport default function Home() {\n  const [loading, setLoading] = useState(false);\n  const [navBarHeight, setNavBarHeight] = useState(0);\n  const [topBar, setTopBar] = useState(0);\n  const navRef = useRef(null);\n  const [anchoViewport, setAnchoViewport] = useState();\n  const mainRef = useRef(null);\n  const servicesRef = useRef(null);\n  const contactRef = useRef(null);\n\n  const {\n    setRefContact,\n    setRefServices,\n    changePage,\n    setChangePage,\n    setRefNav,\n    activeSection,\n    setActiveSection,\n  } = useContext(AllContext);\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      let anchoViewport = window?.outerWidth;\n      console.log(\n        \"🚀 ~ file: index.jsx:32 ~ useEffect ~ anchoViewport:\",\n        anchoViewport\n      );\n      setAnchoViewport(anchoViewport);\n    }\n  }, []);\n  //para obtener la altura del navBar, para no perder espacio, no se esta ocupando\n  useEffect(() => {\n    // Obtén la altura del NavBar al cargar la página\n    if (navBarHeight !== 0) {\n      setTopBar(navBarHeight);\n    }\n  }, [navRef.current]);\n  const scrollToNav = () => {\n    navRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n  //   const scrollToMain = () => {\n  //     mainRef.current.scrollIntoView({ behavior: \"smooth\" });\n  //   };\n  const scrollToServices = () => {\n    servicesRef?.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  const scrollToContact = () => {\n    contactRef?.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  //Efecto para marcar la sección en la que se encuentra el scroll\n  useEffect(() => {\n    const sections = document.querySelectorAll(\"section\");\n\n    const handleScroll = () => {\n      const scrollPosition = window.pageYOffset;\n      let currentSection = \"\";\n      sections.forEach((section) => {\n        const sectionId = section.getAttribute(\"id\");\n        const sectionTop = section.offsetTop;\n        const sectionHeight = section.offsetHeight;\n\n        if (\n          window.pageYOffset >= sectionTop - sectionHeight / 2 &&\n          window.pageYOffset < sectionTop + sectionHeight\n        ) {\n          currentSection = sectionId;\n        }\n      });\n      setActiveSection(currentSection);\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [loading]);\n  //tiempo para obtener la altura del video principal\n  useEffect(() => {\n    // if(anchoViewport > 450){\n      console.log(\"index\", mainRef.current);\n    setTimeout(() => {\n      setLoading(true);\n    }, 800);\n   // } \n    // else {\n    //   setLoading(true);\n    //   console.log('en else')\n    // }\n    \n  }, [mainRef.current]);\n\n  useEffect(() => {\n    setRefContact(contactRef);\n    setRefServices(servicesRef);\n    setRefNav(navRef);\n    console.log(\"🚀 ~ file: index.jsx:107 ~ useEffect ~ navRef:\", navRef)\n  });\n  useEffect(() => {\n    if (changePage) {\n      setTimeout(() => {\n        scrollToServices();\n        setChangePage(false);\n      }, 800);\n    }\n  }, [changePage, setChangePage]);\n\n  useEffect(() => {}, [activeSection]);\n  return (\n    <>\n      <Fragment>\n        <Head>\n          <title>Everseek.io</title>\n          <link rel=\"icon\" href=\"/assets/favicon.ico\" />\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,500;0,600;0,700;1,400;1,500&family=Source+Sans+Pro:ital,wght@0,200;0,300;0,400;0,600;0,700;1,400&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <meta\n            name=\"viewport\"\n            content=\"initial-scale=1.0, width=device-width\"\n          />\n          <meta\n            name=\"description\"\n            content=\"En Everseek, ofrecemos un servicio de detección temprana y notificación de incendios forestales que complementa el trabajo humano con Inteligencia Artificial.\"\n          />\n\n          {/* <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\" defer></script>\n    <script src=\"https://smtpjs.com/v3/smtp.js\" defer></script> */}\n        </Head>\n        <section ref={navRef} id=\"nav\">\n          <NavBar\n            service={scrollToServices}\n            contact={scrollToContact}\n            nav={scrollToNav}\n            activeSection={activeSection}\n            setNavBarHeight={setNavBarHeight}\n            anchoViewport={anchoViewport}\n          />\n        </section>\n        <section ref={mainRef} id=\"main\">\n          <MainImage\n            service={scrollToServices}\n            anchoViewport={anchoViewport}\n            src={\"/assets/Imagen principal.jpg\"}\n          />\n        </section>\n        {loading ? (\n          <>\n            <section ref={servicesRef} id=\"services\">\n              <Services anchoViewport={anchoViewport} />\n            </section>\n            <section ref={contactRef} id=\"contact\">\n              <ContactUs nav={scrollToNav} />\n            </section>\n          </>\n        ) : null}\n      </Fragment>\n    </>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/Pages/nav-bar.jsx",["133","134","135","136","137","138","139"],[],"import { React, useState, useContext, useEffect, useRef } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport {\n  Box,\n  AppBar,\n  Container,\n  Typography,\n  Toolbar,\n  Button,\n  IconButton,\n  MenuItem,\n  Menu,\n  ToggleButton,\n  ToggleButtonGroup,\n  Tooltip,\n  Divider,\n} from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport { langContext } from \"../Lang/LangProvider\";\nimport { FormattedMessage } from \"react-intl\";\nimport { AllContext } from \"../Context/AllContext\";\nimport { useRouter } from \"next/router\";\n/**\n * Componente que contiene el menu de navegación\n * @returns\n */\nexport default function NavBar({\n  service,\n  contact,\n  setNavBarHeight,\n  anchoViewport,\n  // activeSection,\n  nav,\n}) {\n  const { switchLanguage, locale } = useContext(langContext);\n  const {\n    refContact,\n    setRefContact,\n    refServices,\n    setRefServices,\n    setChangePage,\n    refAbout,\n    setAboutRef,\n    changePageToAbout,\n    setChangePageToAbout, activeSection\n  } = useContext(AllContext);\n  const [anchorElNav, setAnchorElNav] = useState(null);\n  const [changeStyles, setChangeStyles] = useState(false);\n  const [colorNav, setColorNav] = useState(\"#fff\");\n  const [anchorLang, setAnchorLang] = useState(null);\n  const location = useRouter();\n  const open = Boolean(anchorLang);\n  let refApp = useRef(null);\n  const navigateTo = (path) => {\n    location.push(path);\n  };\n  const handleClick = (event) => {\n    setAnchorLang(event.currentTarget);\n  };\n  const handleClose = (e) => {\n    console.log(e)\n    if (e.target.outerText === \"EN\") {\n      switchLanguage(\"en-US\");\n    } else if (e.target.outerText === \"ES\") {\n      switchLanguage(\"es-ES\");\n    } else if (e.target.outerText === \"PT\") {\n      switchLanguage(\"pt-BR\");\n    }\n    setAnchorLang(null);\n  };\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (location.pathname === \"/about-us\") {\n        setChangeStyles(true);\n        setColorNav(\"#07293F\");\n      } else if (window.scrollY >= 150) {\n        setChangeStyles(true);\n        setColorNav(\"#07293F\");\n      } else {\n        setChangeStyles(false);\n        setColorNav(\"#fff\");\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [location.pathname]);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  useEffect(() => {}, [activeSection]);\n\n  const handleCloseNavMenu = (e) => {\n    setAnchorElNav(null);\n  };\n\n  useEffect(() => {\n    setNavBarHeight(refApp.current.offsetHeight);\n  }, [refApp.current]);\n\n  const scrollToContact = () => {\n    refContact?.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  const scrollToServices = () => {\n    refServices?.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n  const scrollToAbout = () => {\n    refAbout?.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const handleSectionClick = () => {\n    handleCloseNavMenu();\n    if (location.pathname === \"/about-us\") {\n      setChangePage(true);\n      navigateTo(\"/\");\n    } else if (location.pathname === \"/\") {\n      setChangePageToAbout(true);\n      navigateTo(\"/about-us\");\n    } else {\n      // scrollToContact();\n    }\n  };\n\n\n  return (\n    <Box>\n      <AppBar\n        ref={refApp}\n        position=\"fixed\"\n        sx={{\n          // backgroundColor: changeStyles ? \"#07293F\" : \"#fff\",\n          backgroundColor: colorNav,\n          boxShadow: \"none\",\n          borderBottom: {\n            xs: \"none\",\n            md: changeStyles ? \"none\" : \"1px solid #b3b3b3\",\n          },\n          transition: changeStyles ? \"background-color .5s\" : null,\n        }}\n      >\n        <Container\n          maxWidth={false}\n          sx={{ \"&.MuiContainer-root\": { padding: \"0 !important\" } }}\n        >\n          <Toolbar\n            disableGutters\n            sx={{ justifyContent: { xs: \"none\", md: \"none\" } }}\n          >\n            {/*version mobile del menu */}\n            <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleOpenNavMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon sx={{ color: changeStyles ? \"#fff\" : \"#0060a6\" }} />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorElNav}\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"left\",\n                }}\n                open={Boolean(anchorElNav)}\n                onClose={handleCloseNavMenu}\n                sx={{\n                  display: { xs: \"block\", md: \"none\" },\n                }}\n              >\n                <MenuItem\n                  value={\"services\"}\n                  // component={Link}\n                  // to=\"/\"\n                  onClick={(e) => {\n                    setChangePage(true);\n                    navigateTo(\"/\");\n                  }}\n                >\n                  <Typography textAlign=\"center\">\n                    <FormattedMessage\n                      id=\"nav.item2\"\n                      defaultMessage=\"experiencia\"\n                    />\n                  </Typography>\n                </MenuItem>\n                <MenuItem\n                  // component={Link}\n                  // to=\"/about-us\"\n                  onClick={() => {setChangePageToAbout(true);\n                    navigateTo(\"/about-us\")}}\n                >\n                  <Typography textAlign=\"center\">\n                    <FormattedMessage\n                      id=\"nav.item1\"\n                      defaultMessage=\"nosotros\"\n                    />\n                  </Typography>\n                </MenuItem>\n\n                {/* <MenuItem onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">\n                    <FormattedMessage\n                      id=\"nav.item3\"\n                      defaultMessage=\"contacto\"\n                    />\n                  </Typography>\n                </MenuItem> */}\n                <Box sx={{ display: \"flex\", justifyContent: \"center\" }}></Box>\n              </Menu>\n            </Box>\n            <Box\n              // onClick={nav}\n              // component={Link}\n              // to=\"/\"\n              sx={{\n                marginLeft: { md: \"60px\" },\n                marginY: { md: \"12px\" },\n                width: \"300px\",\n                cursor: \"pointer\",\n                display: { xs: \"flex\", md: \"inline\" },\n                justifyContent: { xs: \"center\" },\n              }}\n            >\n              <img\n                src={\n                  changeStyles\n                    ? \"/assets/Everseek-blanco.png\"\n                    : \"/assets/Everseek-azul.png\"\n                }\n                alt=\"logo\"\n                style={{ width: \"100%\", transition: \"opacity 0.5s\" }}\n              />\n            </Box>\n            <Box\n              sx={{\n                flexGrow: 1,\n                display: { xs: \"none\", md: \"flex\" },\n                width: \"100%\",\n                justifyContent: \"end\",\n                alignItems: \"center\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  width: \"55%\",\n                  justifyContent: \"space-around\",\n                }}\n              >\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  {/* <img src=\"/icons/Forma E.png\"  style={{width:anchoViewport*0.0119047619, height:anchoViewport*0.0052910053, visibility:activeSection === \"services\"?\"visible\":\"hidden\"}} alt=\"\"/> */}\n                  <Button\n                    onClick={() =>\n                      location.pathname === \"/about-us\"\n                        ? handleSectionClick()\n                        : scrollToServices()\n                    }\n                    sx={{\n                      my: 2,\n                      color: changeStyles ? \"#fff\" : \"#0060a6\",\n                      display: \"block\",\n                      fontFamily: \"Source Sans Pro, sans-serif\",\n                      fontSize: \"18px\",\n                      fontWeight: 700,\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"nav.item2\"\n                      defaultMessage=\"experiencia\"\n                    />\n                    <Divider\n                      sx={{\n                        backgroundColor: \"#EB783E\",\n                        opacity: 1,\n                        visibility:\n                          activeSection === \"services\" ? \"visible\" : \"hidden\",\n                      }}\n                    />\n                  </Button>\n                </Box>\n                <Box\n                  // component={Link}\n                  // to=\"/about-us\"\n                  onClick={() => {\n                    location.pathname === \"/\"\n                      ? handleSectionClick()\n                      : scrollToAbout();\n                  }}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    textDecoration: \"none\",\n                  }}\n                >\n                  {/* <img src=\"/icons/Forma E.png\"  style={{width:anchoViewport*0.0119047619, height:anchoViewport*0.0052910053, visibility:activeSection === \"main\"?\"visible\":\"hidden\"}} alt=\"\"/> */}\n                  <Button\n                    sx={{\n                      my: 2,\n                      color: changeStyles ? \"#fff\" : \"#0060a6\",\n                      display: \"block\",\n                      fontFamily: \"Source Sans Pro, sans-serif\",\n                      fontSize: \"18px\",\n                      fontWeight: 700,\n                      width: \"max-content \",\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"nav.item1\"\n                      defaultMessage=\"nosotros\"\n                    />\n                    <Divider\n                      sx={{\n                        backgroundColor: \"#EB783E\",\n                        opacity: 1,\n                        visibility:\n                          location.pathname === \"/about-us\" && activeSection !== \"contact\" ? \"visible\" : \"hidden\",\n                      }}\n                    />\n                  </Button>\n                </Box>\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  {/* <img src=\"/icons/Forma E.png\"  style={{width:anchoViewport*0.0119047619, height:anchoViewport*0.0052910053, visibility:activeSection === \"contact\"?\"visible\":\"hidden\"}} alt=\"\"/> */}\n                  <Button\n                    onClick={scrollToContact}\n                    // location.pathname === \"/about-us\"?navigate(-1) contact():contact()}\n                    sx={{\n                      my: 2,\n                      color: changeStyles ? \"#fff\" : \"#0060a6\",\n                      display: \"block\",\n                      fontFamily: \"Source Sans Pro, sans-serif\",\n                      fontSize: \"18px\",\n                      fontWeight: 700,\n                    }}\n                  >\n                    <FormattedMessage\n                      id=\"nav.item3\"\n                      defaultMessage=\"contacto\"\n                    />\n                    <Divider\n                      sx={{\n                        backgroundColor: \"#EB783E\",\n                        opacity: 1,\n                        visibility:\n                          activeSection === \"contact\" ? \"visible\" : \"hidden\",\n                      }}\n                    />\n                  </Button>\n                </Box>\n                <Box sx={{ visibility: { xs: \"hidden\", md: \"visible\" } }}>\n                  <Tooltip\n                    title={\n                      <FormattedMessage\n                        id=\"nav.item4\"\n                        defaultMessage=\"idioma\"\n                      />\n                    }\n                  >\n                    <Button\n                      onClick={handleClick}\n                      sx={{\n                        my: 2,\n                        color: changeStyles ? \"#fff\" : \"#0060a6\",\n                        display: \"block\",\n                        fontFamily: \"Source Sans Pro, sans-serif\",\n                        fontSize: \"18px\",\n                        fontWeight: 700,\n                      }}\n                    >\n                      {/* {language.slice(0, 2)} */}\n                      {locale.slice(0, 2)}\n                      {/* <FormattedMessage id=\"nav.item\" defaultMessage=\"idioma\" /> */}\n                    </Button>\n                  </Tooltip>\n                  <Menu\n                    id=\"demo-positioned-menu\"\n                    aria-labelledby=\"composition-button\"\n                    disableScrollLock={true}\n                    anchorEl={anchorLang}\n                    open={open}\n                    onClose={(e) => handleClose(e)}\n                    transformOrigin={{ horizontal: \"center\", vertical: \"top\" }}\n                    anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\n                  >\n                    <MenuItem\n                      sx={{\n                        \"&.Mui-selected\": {\n                          backgroundColor: \"rgb(0, 96, 166, .5)\",\n                        },\n                      }}\n                      value=\"en-US\"\n                      selected={locale === \"en-US\" ? true : false}\n                      onClick={(e) => handleClose(e)}\n                    >\n                      EN\n                    </MenuItem>\n                    <MenuItem\n                      sx={{\n                        \"&.Mui-selected\": {\n                          backgroundColor: \"rgb(0, 96, 166, .5)\",\n                        },\n                      }}\n                      value=\"es-ES\"\n                      selected={locale === \"es-ES\" ? true : false}\n                      onClick={(e) => handleClose(e)}\n                    >\n                      ES\n                    </MenuItem>\n                    <MenuItem\n                      sx={{\n                        \"&.Mui-selected\": {\n                          backgroundColor: \"rgb(0, 96, 166, .5)\",\n                        },\n                      }}\n                      value=\"br-BR\"\n                      selected={locale === \"br-BR\" ? true : false}\n                      onClick={(e) => handleClose(e)}\n                    >\n                      PT\n                    </MenuItem>\n                  </Menu>\n                </Box>\n              </Box>\n\n              {/*debe ser toggle */}\n            </Box>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </Box>\n  );\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/SendEmail.jsx",["140","141"],[],"import React from \"react\";\nimport { db } from \"./firebase\";\nimport { collection, addDoc, doc } from \"firebase/firestore\";\n\nexport default async function SendEmail(nombre, apellido, email, texto) {\n  const collectionRef = collection(db, \"everseek-web\",\"data\",\"emails\");\n  const emailContent = {\n\t  pass:\"wof3000\",\n    message: {\n      header: \"Comentarios de pagina web Everseek.io\",\n      human_being: `${\"Comentario de: \" +nombre + \" \" + apellido}`,\n      mail: `${email}`,\n      text: `${texto}`,\n    },\n  };\n  try {\n    const docRef = await addDoc(collectionRef, emailContent);\n    return docRef;\n  } catch (error) {\n    console.error(\"Error adding email document: \", error);\n    throw error;\n  }\n}\n","/Users/steffypulgar/Documents/Firehawk/everseek.io/src/firebase.js",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/index.js",[],[],"/Users/steffypulgar/Documents/Firehawk/everseek.io/src/reportWebVitals.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":1,"column":35,"nodeType":"144","messageId":"145","endLine":1,"endColumn":44},{"ruleId":"142","severity":1,"message":"146","line":18,"column":11,"nodeType":"144","messageId":"145","endLine":18,"endColumn":25},{"ruleId":"147","severity":1,"message":"148","line":18,"column":9,"nodeType":"149","endLine":18,"endColumn":87},{"ruleId":"142","severity":1,"message":"150","line":15,"column":10,"nodeType":"144","messageId":"145","endLine":15,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":170,"column":15,"nodeType":"149","messageId":"153","endLine":173,"endColumn":16,"fix":"154"},{"ruleId":"151","severity":1,"message":"152","line":516,"column":17,"nodeType":"149","messageId":"153","endLine":519,"endColumn":18,"fix":"155"},{"ruleId":"142","severity":1,"message":"156","line":2,"column":27,"nodeType":"144","messageId":"145","endLine":2,"endColumn":33},{"ruleId":"142","severity":1,"message":"157","line":10,"column":10,"nodeType":"144","messageId":"145","endLine":10,"endColumn":21},{"ruleId":"142","severity":1,"message":"158","line":10,"column":23,"nodeType":"144","messageId":"145","endLine":10,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":9,"column":17,"nodeType":"149","endLine":9,"endColumn":70},{"ruleId":"142","severity":1,"message":"159","line":44,"column":21,"nodeType":"144","messageId":"145","endLine":44,"endColumn":33},{"ruleId":"142","severity":1,"message":"160","line":62,"column":9,"nodeType":"144","messageId":"145","endLine":62,"endColumn":19},{"ruleId":"142","severity":1,"message":"161","line":72,"column":9,"nodeType":"144","messageId":"145","endLine":72,"endColumn":19},{"ruleId":"142","severity":1,"message":"162","line":3,"column":17,"nodeType":"144","messageId":"145","endLine":3,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":3,"column":27,"nodeType":"144","messageId":"145","endLine":3,"endColumn":36},{"ruleId":"142","severity":1,"message":"163","line":3,"column":38,"nodeType":"144","messageId":"145","endLine":3,"endColumn":44},{"ruleId":"142","severity":1,"message":"164","line":3,"column":46,"nodeType":"144","messageId":"145","endLine":3,"endColumn":61},{"ruleId":"142","severity":1,"message":"165","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":17},{"ruleId":"142","severity":1,"message":"166","line":22,"column":5,"nodeType":"144","messageId":"145","endLine":22,"endColumn":13},{"ruleId":"142","severity":1,"message":"167","line":24,"column":5,"nodeType":"144","messageId":"145","endLine":24,"endColumn":22},{"ruleId":"142","severity":1,"message":"168","line":25,"column":5,"nodeType":"144","messageId":"145","endLine":25,"endColumn":25},{"ruleId":"142","severity":1,"message":"169","line":26,"column":5,"nodeType":"144","messageId":"145","endLine":26,"endColumn":16},{"ruleId":"142","severity":1,"message":"146","line":35,"column":13,"nodeType":"144","messageId":"145","endLine":35,"endColumn":27},{"ruleId":"170","severity":1,"message":"171","line":57,"column":6,"nodeType":"172","endLine":57,"endColumn":8,"suggestions":"173"},{"ruleId":"142","severity":1,"message":"174","line":66,"column":9,"nodeType":"144","messageId":"145","endLine":66,"endColumn":22},{"ruleId":"170","severity":1,"message":"175","line":73,"column":6,"nodeType":"172","endLine":73,"endColumn":23,"suggestions":"176"},{"ruleId":"142","severity":1,"message":"146","line":79,"column":13,"nodeType":"144","messageId":"145","endLine":79,"endColumn":27},{"ruleId":"170","severity":1,"message":"171","line":100,"column":6,"nodeType":"172","endLine":100,"endColumn":15,"suggestions":"177"},{"ruleId":"142","severity":1,"message":"178","line":7,"column":22,"nodeType":"144","messageId":"145","endLine":7,"endColumn":35},{"ruleId":"142","severity":1,"message":"179","line":9,"column":10,"nodeType":"144","messageId":"145","endLine":9,"endColumn":19},{"ruleId":"142","severity":1,"message":"180","line":16,"column":10,"nodeType":"144","messageId":"145","endLine":16,"endColumn":16},{"ruleId":"170","severity":1,"message":"181","line":48,"column":6,"nodeType":"172","endLine":48,"endColumn":22,"suggestions":"182"},{"ruleId":"142","severity":1,"message":"146","line":67,"column":13,"nodeType":"144","messageId":"145","endLine":67,"endColumn":27},{"ruleId":"170","severity":1,"message":"171","line":88,"column":6,"nodeType":"172","endLine":88,"endColumn":15,"suggestions":"183"},{"ruleId":"170","severity":1,"message":"175","line":102,"column":6,"nodeType":"172","endLine":102,"endColumn":23,"suggestions":"184"},{"ruleId":"142","severity":1,"message":"185","line":13,"column":3,"nodeType":"144","messageId":"145","endLine":13,"endColumn":15},{"ruleId":"142","severity":1,"message":"186","line":14,"column":3,"nodeType":"144","messageId":"145","endLine":14,"endColumn":20},{"ruleId":"142","severity":1,"message":"187","line":38,"column":5,"nodeType":"144","messageId":"145","endLine":38,"endColumn":18},{"ruleId":"142","severity":1,"message":"188","line":40,"column":5,"nodeType":"144","messageId":"145","endLine":40,"endColumn":19},{"ruleId":"142","severity":1,"message":"189","line":43,"column":5,"nodeType":"144","messageId":"145","endLine":43,"endColumn":16},{"ruleId":"142","severity":1,"message":"167","line":44,"column":5,"nodeType":"144","messageId":"145","endLine":44,"endColumn":22},{"ruleId":"170","severity":1,"message":"190","line":105,"column":6,"nodeType":"172","endLine":105,"endColumn":22,"suggestions":"191"},{"ruleId":"142","severity":1,"message":"192","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"193","line":3,"column":30,"nodeType":"144","messageId":"145","endLine":3,"endColumn":33},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'scrollPosition' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useNavigate' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"194","text":"195"},{"range":"196","text":"195"},"'Button' is defined but never used.","'videoLoaded' is assigned a value but never used.","'setVideoLoaded' is assigned a value but never used.","'setCompleted' is assigned a value but never used.","'handleNext' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useLayoutEffect' is defined but never used.","'MainImage' is defined but never used.","'refAbout' is assigned a value but never used.","'changePageToAbout' is assigned a value but never used.","'setChangePageToAbout' is assigned a value but never used.","'refServices' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setActiveSection'. Either include it or remove the dependency array.","ArrayExpression",["197"],"'scrollToAbout' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'mainRef.current'. Either exclude it or remove the dependency array. Mutable values like 'mainRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["198"],["199"],"'useAllContext' is defined but never used.","'useRouter' is defined but never used.","'topBar' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navBarHeight'. Either include it or remove the dependency array. Mutable values like 'navRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["200"],["201"],["202"],"'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'setRefContact' is assigned a value but never used.","'setRefServices' is assigned a value but never used.","'setAboutRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNavBarHeight'. Either include it or remove the dependency array. Mutable values like 'refApp.current' aren't valid dependencies because mutating them doesn't re-render the component.",["203"],"'React' is defined but never used.","'doc' is defined but never used.",[4804,4804]," rel=\"noreferrer\"",[17803,17803],{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"208","fix":"212"},{"desc":"206","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [setActiveSection]",{"range":"216","text":"217"},"Update the dependencies array to be: []",{"range":"218","text":"219"},"Update the dependencies array to be: [loading, setActiveSection]",{"range":"220","text":"221"},"Update the dependencies array to be: [navBarHeight]",{"range":"222","text":"223"},{"range":"224","text":"221"},{"range":"225","text":"219"},"Update the dependencies array to be: [setNavBarHeight]",{"range":"226","text":"227"},[1794,1796],"[setActiveSection]",[2163,2180],"[]",[2965,2974],"[loading, setActiveSection]",[1499,1515],"[navBarHeight]",[2782,2791],[3106,3123],[2599,2615],"[setNavBarHeight]"]